<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0805.0415                               -->
<workbook original-version='18.1' source-build='2023.2.1 (20232.23.0805.0415)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (df_long)' inline='true' name='federated.1av105x13bso0l1483flz0vgg3d8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_long' name='excel-direct.1ivd3hq1ggw5qd16ni5ue0ctfz3a'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/lenovo/Desktop/PFA/df_long.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ivd3hq1ggw5qd16ni5ue0ctfz3a' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C253:no:A1:C253:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1ivd3hq1ggw5qd16ni5ue0ctfz3a' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C253:no:A1:C253:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C253:no:A1:C253:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Months</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Months]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Months</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A9115E7755864442B29D4D34A1979428]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A9115E7755864442B29D4D34A1979428]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A9115E7755864442B29D4D34A1979428]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='quarter' datatype='string' name='[Calculation_685954572381306881]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_A9115E7755864442B29D4D34A1979428]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_685954572381306881]' derivation='None' name='[none:Calculation_685954572381306881:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_685954572381306881:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Q1&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Q4&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Q3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Q2&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_A9115E7755864442B29D4D34A1979428'>
            <properties context=''>
              <relation connection='excel-direct.1ivd3hq1ggw5qd16ni5ue0ctfz3a' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C253:no:A1:C253:0' header='yes' outcome='2'>
                  <column datatype='string' name='Months' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='real' name='Value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df_long_Ph)' inline='true' name='federated.0sc1ceo1ct0dkq171ubqc0l2gme2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_long_Ph' name='excel-direct.0tene831v63myp1co2jyg14h84e9'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/lenovo/Desktop/PFA/df_long_Ph.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0tene831v63myp1co2jyg14h84e9' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0tene831v63myp1co2jyg14h84e9' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C241:no:A1:C241:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Months</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Months]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Months</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FAE25C2D80A3400F84FB4C5CA8D5E9FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FAE25C2D80A3400F84FB4C5CA8D5E9FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FAE25C2D80A3400F84FB4C5CA8D5E9FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Quarter' datatype='string' name='[Calculation_685954572414775298]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_FAE25C2D80A3400F84FB4C5CA8D5E9FB]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_685954572414775298]' derivation='None' name='[none:Calculation_685954572414775298:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_685954572414775298:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Q4&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Q1&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Q3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Q2&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_FAE25C2D80A3400F84FB4C5CA8D5E9FB'>
            <properties context=''>
              <relation connection='excel-direct.0tene831v63myp1co2jyg14h84e9' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
                  <column datatype='string' name='Months' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='real' name='Value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df_long_Po)' inline='true' name='federated.0aghkan1klh4ph1gyrkbi1oxqkc6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_long_Po' name='excel-direct.05vzqci1fhtdl810lh5ko0dtje1r'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/lenovo/Desktop/PFA/df_long_Po.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.05vzqci1fhtdl810lh5ko0dtje1r' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.05vzqci1fhtdl810lh5ko0dtje1r' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C241:no:A1:C241:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Months</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Months]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Months</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D8E728A476514741B8FBF2F234550CBF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D8E728A476514741B8FBF2F234550CBF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D8E728A476514741B8FBF2F234550CBF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Quarter' datatype='string' name='[Calculation_685954572417699843]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_D8E728A476514741B8FBF2F234550CBF]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_685954572417699843]' derivation='None' name='[none:Calculation_685954572417699843:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_685954572417699843:nk]' type='palette'>
            <map to='#76b7b2'>
              <bucket>&quot;Q4&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Q3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Q2&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Q1&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_D8E728A476514741B8FBF2F234550CBF'>
            <properties context=''>
              <relation connection='excel-direct.05vzqci1fhtdl810lh5ko0dtje1r' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
                  <column datatype='string' name='Months' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='real' name='Value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df_long_oil)' inline='true' name='federated.01d103x1jyosq31doin3i0kqsebp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_long_oil' name='excel-direct.1ml04n816395561gil1mi04m12yf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/lenovo/Desktop/PFA/df_long_oil.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ml04n816395561gil1mi04m12yf' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1ml04n816395561gil1mi04m12yf' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C241:no:A1:C241:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Months</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Months]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Months</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AE29C9BEB4964CF29CCE1BD8815C2957]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AE29C9BEB4964CF29CCE1BD8815C2957]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AE29C9BEB4964CF29CCE1BD8815C2957]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Quarter' datatype='string' name='[Calculation_685954572422836228]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_AE29C9BEB4964CF29CCE1BD8815C2957]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_685954572422836228]' derivation='None' name='[none:Calculation_685954572422836228:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_685954572422836228:nk]' type='palette'>
            <map to='#76b7b2'>
              <bucket>&quot;Q4&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Q3&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Q1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Q2&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_AE29C9BEB4964CF29CCE1BD8815C2957'>
            <properties context=''>
              <relation connection='excel-direct.1ml04n816395561gil1mi04m12yf' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
                  <column datatype='string' name='Months' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='real' name='Value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df_long_cement)' inline='true' name='federated.0uc9xdk1p8a2eu1go1k2t0c14b32' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_long_cement' name='excel-direct.0kohpb61pbft4w18la8hf13ideyi'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/lenovo/Desktop/PFA/df_long_cement.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0kohpb61pbft4w18la8hf13ideyi' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0kohpb61pbft4w18la8hf13ideyi' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C241:no:A1:C241:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Months</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Months]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Months</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0427E221086D403EAF78FA71273858F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0427E221086D403EAF78FA71273858F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0427E221086D403EAF78FA71273858F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Quarter ' datatype='string' name='[Calculation_685954572424368133]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_0427E221086D403EAF78FA71273858F6]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_685954572424368133]' derivation='None' name='[none:Calculation_685954572424368133:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_685954572424368133:nk]' type='palette'>
            <map to='#76b7b2'>
              <bucket>&quot;Q4&quot;</bucket>
            </map>
            <map to='#baa094'>
              <bucket>&quot;Q1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Q3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Q2&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_0427E221086D403EAF78FA71273858F6'>
            <properties context=''>
              <relation connection='excel-direct.0kohpb61pbft4w18la8hf13ideyi' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
                  <column datatype='string' name='Months' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='real' name='Value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df_long_fertilizer)' inline='true' name='federated.05fm1pe1qt4mjp19ltvz4109j2ft' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_long_fertilizer' name='excel-direct.1s9vp6v0rvn4qy1dh8c2s1mnx7fa'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/lenovo/Desktop/PFA/df_long_fertilizer.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1s9vp6v0rvn4qy1dh8c2s1mnx7fa' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='integer' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1s9vp6v0rvn4qy1dh8c2s1mnx7fa' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='integer' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Months</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Months]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Months</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C241:no:A1:C241:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Quarter' datatype='string' name='[Calculation_685954572426448902]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_A4CB058E21334844A5795F892A3EE0B4]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_685954572426448902]' derivation='None' name='[none:Calculation_685954572426448902:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_685954572426448902:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Q1&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Q4&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Q3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Q2&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_A4CB058E21334844A5795F892A3EE0B4'>
            <properties context=''>
              <relation connection='excel-direct.1s9vp6v0rvn4qy1dh8c2s1mnx7fa' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
                  <column datatype='string' name='Months' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='integer' name='Value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df_long_it)' inline='true' name='federated.1awnv4417j85c411oxkos0d12eye' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_long_it' name='excel-direct.13rvxo0080h1eo10865fp06cd3vq'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/lenovo/Desktop/PFA/df_long_it.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.13rvxo0080h1eo10865fp06cd3vq' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.13rvxo0080h1eo10865fp06cd3vq' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C241:no:A1:C241:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Months</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Months]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Months</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BB4D07E7BE6B4C3E9F9B2DCA0738E29D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BB4D07E7BE6B4C3E9F9B2DCA0738E29D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BB4D07E7BE6B4C3E9F9B2DCA0738E29D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Quarter' datatype='string' name='[Calculation_685954572429021191]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_BB4D07E7BE6B4C3E9F9B2DCA0738E29D]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_BB4D07E7BE6B4C3E9F9B2DCA0738E29D'>
            <properties context=''>
              <relation connection='excel-direct.13rvxo0080h1eo10865fp06cd3vq' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
                  <column datatype='string' name='Months' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='real' name='Value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df_long_media)' inline='true' name='federated.0wggnjo0vx7xzw1au99r813fotsn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_long_media' name='excel-direct.0t3lz1l0c5yasa11ag87o1ywe6su'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/lenovo/Desktop/PFA/df_long_media.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0t3lz1l0c5yasa11ag87o1ywe6su' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C229:no:A1:C229:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='integer' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0t3lz1l0c5yasa11ag87o1ywe6su' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C229:no:A1:C229:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='integer' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Months</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Months]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Months</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C229:no:A1:C229:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Quarter' datatype='string' name='[Calculation_685954572430835720]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_153F82D0974B44A4B574099C93104F11]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_685954572430835720]' derivation='None' name='[none:Calculation_685954572430835720:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_685954572430835720:nk]' type='palette'>
            <map to='#76b7b2'>
              <bucket>&quot;Q4&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Q1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Q3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Q2&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_153F82D0974B44A4B574099C93104F11'>
            <properties context=''>
              <relation connection='excel-direct.0t3lz1l0c5yasa11ag87o1ywe6su' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C229:no:A1:C229:0' header='yes' outcome='2'>
                  <column datatype='string' name='Months' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='integer' name='Value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df_long_metal)' inline='true' name='federated.1krbxfq1vhq84h1ga9em30n7wsgp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_long_metal' name='excel-direct.0u7vmrg0vuev261h71bec00l0er4'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/lenovo/Desktop/PFA/df_long_metal.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0u7vmrg0vuev261h71bec00l0er4' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0u7vmrg0vuev261h71bec00l0er4' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C241:no:A1:C241:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Months</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Months]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Months</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F7CE68FF07EF47049B14216BFF0CFB9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F7CE68FF07EF47049B14216BFF0CFB9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F7CE68FF07EF47049B14216BFF0CFB9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Quarter' datatype='string' name='[Calculation_685954572433608713]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_F7CE68FF07EF47049B14216BFF0CFB9C]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_685954572433608713]' derivation='None' name='[none:Calculation_685954572433608713:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_685954572433608713:nk]' type='palette'>
            <map to='#76b7b2'>
              <bucket>&quot;Q4&quot;</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>&quot;Q1&quot;</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>&quot;Q3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Q2&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_F7CE68FF07EF47049B14216BFF0CFB9C'>
            <properties context=''>
              <relation connection='excel-direct.0u7vmrg0vuev261h71bec00l0er4' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
                  <column datatype='string' name='Months' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='real' name='Value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df_long_telecom)' inline='true' name='federated.1yal7w41wlwzlj1h345rj122ldpl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_long_telecom' name='excel-direct.1wbz9qk0r8dznz18aaky71w1inmm'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/lenovo/Desktop/PFA/df_long_telecom.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1wbz9qk0r8dznz18aaky71w1inmm' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='integer' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1wbz9qk0r8dznz18aaky71w1inmm' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='integer' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Months</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Months]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Months</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C241:no:A1:C241:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Quarter' datatype='string' name='[Calculation_685954572435763210]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_C313F523C34146D0B17AB5DDDBCC922F]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_685954572435763210]' derivation='None' name='[none:Calculation_685954572435763210:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_685954572435763210:nk]' type='palette'>
            <map to='#76b7b2'>
              <bucket>&quot;Q4&quot;</bucket>
            </map>
            <map to='#a08400'>
              <bucket>&quot;Q1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Q3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Q2&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_C313F523C34146D0B17AB5DDDBCC922F'>
            <properties context=''>
              <relation connection='excel-direct.1wbz9qk0r8dznz18aaky71w1inmm' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
                  <column datatype='string' name='Months' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='integer' name='Value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df_long_auto)' inline='true' name='federated.186ernu0lypxmw1c2s0dv1qrtv3y' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_long_auto' name='excel-direct.1cpf67n1dx76py13g5f8t1ri8pzj'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/lenovo/Desktop/PFA/df_long_auto.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1cpf67n1dx76py13g5f8t1ri8pzj' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1cpf67n1dx76py13g5f8t1ri8pzj' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C241:no:A1:C241:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Months</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Months]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Months</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_85C66898DEF54CFB8B750CF1111D701F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_85C66898DEF54CFB8B750CF1111D701F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_85C66898DEF54CFB8B750CF1111D701F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Quarter' datatype='string' name='[Calculation_685954572438310923]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_85C66898DEF54CFB8B750CF1111D701F]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_685954572438310923]' derivation='None' name='[none:Calculation_685954572438310923:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_685954572438310923:nk]' type='palette'>
            <map to='#76b7b2'>
              <bucket>&quot;Q4&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Q3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Q2&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Q1&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_85C66898DEF54CFB8B750CF1111D701F'>
            <properties context=''>
              <relation connection='excel-direct.1cpf67n1dx76py13g5f8t1ri8pzj' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
                  <column datatype='string' name='Months' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='real' name='Value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_CEC620FBE2A54FCBB7AB92737448EF1B]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Pharma' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Quarter' />
        <param name='target' value='Pharma' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2_6777A53AD42D4508896A9709CD91ED19]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='oil' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Quarter' />
        <param name='target' value='oil' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Fertilizer'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Fertilizer</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_long_fertilizer)' name='federated.05fm1pe1qt4mjp19ltvz4109j2ft' />
          </datasources>
          <datasource-dependencies datasource='federated.05fm1pe1qt4mjp19ltvz4109j2ft'>
            <column caption='Quarter' datatype='string' name='[Calculation_685954572426448902]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Months]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Value]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_685954572426448902]' derivation='None' name='[none:Calculation_685954572426448902:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05fm1pe1qt4mjp19ltvz4109j2ft].[none:Calculation_685954572426448902:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_685954572426448902:nk]' />
              <groupfilter function='member' level='[none:Calculation_685954572426448902:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.05fm1pe1qt4mjp19ltvz4109j2ft].[none:Calculation_685954572426448902:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height' field='[federated.05fm1pe1qt4mjp19ltvz4109j2ft].[none:Year:ok]' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.05fm1pe1qt4mjp19ltvz4109j2ft].[none:Calculation_685954572426448902:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.05fm1pe1qt4mjp19ltvz4109j2ft].[avg:Value:qk]</rows>
        <cols>([federated.05fm1pe1qt4mjp19ltvz4109j2ft].[none:Year:ok] / [federated.05fm1pe1qt4mjp19ltvz4109j2ft].[none:Calculation_685954572426448902:nk])</cols>
      </table>
      <simple-id uuid='{A93F58E8-22D3-4748-A3CB-8F74D74CBCC5}' />
    </worksheet>
    <worksheet name='IT'>
      <layout-options>
        <title>
          <formatted-text>
            <run>IT</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_long_it)' name='federated.1awnv4417j85c411oxkos0d12eye' />
          </datasources>
          <datasource-dependencies datasource='federated.1awnv4417j85c411oxkos0d12eye'>
            <column caption='Quarter' datatype='string' name='[Calculation_685954572429021191]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Months]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_685954572429021191]' derivation='None' name='[none:Calculation_685954572429021191:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1awnv4417j85c411oxkos0d12eye].[none:Calculation_685954572429021191:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1awnv4417j85c411oxkos0d12eye].[avg:Value:qk]</rows>
        <cols>([federated.1awnv4417j85c411oxkos0d12eye].[none:Year:ok] / [federated.1awnv4417j85c411oxkos0d12eye].[none:Calculation_685954572429021191:nk])</cols>
      </table>
      <simple-id uuid='{CE9F890A-2395-447C-AD2E-D5A582FA9CCA}' />
    </worksheet>
    <worksheet name='Pharma'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Pharma</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_long_Ph)' name='federated.0sc1ceo1ct0dkq171ubqc0l2gme2' />
          </datasources>
          <datasource-dependencies datasource='federated.0sc1ceo1ct0dkq171ubqc0l2gme2'>
            <column caption='Quarter' datatype='string' name='[Calculation_685954572414775298]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Months]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_685954572414775298]' derivation='None' name='[none:Calculation_685954572414775298:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0sc1ceo1ct0dkq171ubqc0l2gme2].[none:Calculation_685954572414775298:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_685954572414775298:nk]' />
              <groupfilter function='member' level='[none:Calculation_685954572414775298:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0sc1ceo1ct0dkq171ubqc0l2gme2].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' />
          </filter>
          <slices>
            <column>[federated.0sc1ceo1ct0dkq171ubqc0l2gme2].[none:Year:ok]</column>
            <column>[federated.0sc1ceo1ct0dkq171ubqc0l2gme2].[none:Calculation_685954572414775298:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height' field='[federated.0sc1ceo1ct0dkq171ubqc0l2gme2].[none:Year:ok]' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0sc1ceo1ct0dkq171ubqc0l2gme2].[none:Calculation_685954572414775298:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0sc1ceo1ct0dkq171ubqc0l2gme2].[avg:Value:qk]</rows>
        <cols>([federated.0sc1ceo1ct0dkq171ubqc0l2gme2].[none:Year:ok] / [federated.0sc1ceo1ct0dkq171ubqc0l2gme2].[none:Calculation_685954572414775298:nk])</cols>
      </table>
      <simple-id uuid='{2B958269-96C1-41B6-B98B-AB3D3A904585}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#e15759' fontname='Elephant' fontsize='22'>Volatility</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_long)' name='federated.1av105x13bso0l1483flz0vgg3d8' />
          </datasources>
          <datasource-dependencies datasource='federated.1av105x13bso0l1483flz0vgg3d8'>
            <column caption='quarter' datatype='string' name='[Calculation_685954572381306881]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Months]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_685954572381306881]' derivation='None' name='[none:Calculation_685954572381306881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1av105x13bso0l1483flz0vgg3d8].[none:Year:ok]'>
            <groupfilter from='2005' function='range' level='[none:Year:ok]' to='2024' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1av105x13bso0l1483flz0vgg3d8].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1av105x13bso0l1483flz0vgg3d8].[none:Calculation_685954572381306881:nk]' />
              <color column='[federated.1av105x13bso0l1483flz0vgg3d8].[none:Calculation_685954572381306881:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#333333' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1av105x13bso0l1483flz0vgg3d8].[sum:Value:qk]</rows>
        <cols>([federated.1av105x13bso0l1483flz0vgg3d8].[none:Year:ok] / [federated.1av105x13bso0l1483flz0vgg3d8].[none:Calculation_685954572381306881:nk])</cols>
      </table>
      <simple-id uuid='{5A8010F9-9ACF-4CA5-AE78-3EE3EC2ACA78}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_long)' name='federated.1av105x13bso0l1483flz0vgg3d8' />
          </datasources>
          <datasource-dependencies datasource='federated.1av105x13bso0l1483flz0vgg3d8'>
            <column caption='quarter' datatype='string' name='[Calculation_685954572381306881]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Months]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_685954572381306881]' derivation='None' name='[none:Calculation_685954572381306881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1av105x13bso0l1483flz0vgg3d8].[none:Calculation_685954572381306881:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1av105x13bso0l1483flz0vgg3d8].[avg:Value:qk]</rows>
        <cols>([federated.1av105x13bso0l1483flz0vgg3d8].[none:Calculation_685954572381306881:nk] / [federated.1av105x13bso0l1483flz0vgg3d8].[none:Year:ok])</cols>
      </table>
      <simple-id uuid='{432E3889-0F78-43D6-B865-952C3061AC3C}' />
    </worksheet>
    <worksheet name='Telecom'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_long_telecom)' name='federated.1yal7w41wlwzlj1h345rj122ldpl' />
          </datasources>
          <datasource-dependencies datasource='federated.1yal7w41wlwzlj1h345rj122ldpl'>
            <column caption='Quarter' datatype='string' name='[Calculation_685954572435763210]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Months]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Value]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_685954572435763210]' derivation='None' name='[none:Calculation_685954572435763210:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1yal7w41wlwzlj1h345rj122ldpl].[none:Calculation_685954572435763210:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1yal7w41wlwzlj1h345rj122ldpl].[avg:Value:qk]</rows>
        <cols>([federated.1yal7w41wlwzlj1h345rj122ldpl].[none:Year:ok] / [federated.1yal7w41wlwzlj1h345rj122ldpl].[none:Calculation_685954572435763210:nk])</cols>
      </table>
      <simple-id uuid='{0C585C52-56DA-4651-BC73-981233A968A1}' />
    </worksheet>
    <worksheet name='auto'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_long_auto)' name='federated.186ernu0lypxmw1c2s0dv1qrtv3y' />
          </datasources>
          <datasource-dependencies datasource='federated.186ernu0lypxmw1c2s0dv1qrtv3y'>
            <column caption='Quarter' datatype='string' name='[Calculation_685954572438310923]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Months]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_685954572438310923]' derivation='None' name='[none:Calculation_685954572438310923:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.186ernu0lypxmw1c2s0dv1qrtv3y].[none:Calculation_685954572438310923:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.186ernu0lypxmw1c2s0dv1qrtv3y].[avg:Value:qk]</rows>
        <cols>([federated.186ernu0lypxmw1c2s0dv1qrtv3y].[none:Year:ok] / [federated.186ernu0lypxmw1c2s0dv1qrtv3y].[none:Calculation_685954572438310923:nk])</cols>
      </table>
      <simple-id uuid='{478AD6A2-4CE0-4948-BF75-72F1717E9A27}' />
    </worksheet>
    <worksheet name='cement'>
      <layout-options>
        <title>
          <formatted-text>
            <run>cement</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_long_cement)' name='federated.0uc9xdk1p8a2eu1go1k2t0c14b32' />
          </datasources>
          <datasource-dependencies datasource='federated.0uc9xdk1p8a2eu1go1k2t0c14b32'>
            <column caption='Quarter ' datatype='string' name='[Calculation_685954572424368133]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Months]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_685954572424368133]' derivation='None' name='[none:Calculation_685954572424368133:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0uc9xdk1p8a2eu1go1k2t0c14b32].[none:Calculation_685954572424368133:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0uc9xdk1p8a2eu1go1k2t0c14b32].[avg:Value:qk]</rows>
        <cols>([federated.0uc9xdk1p8a2eu1go1k2t0c14b32].[none:Year:ok] / [federated.0uc9xdk1p8a2eu1go1k2t0c14b32].[none:Calculation_685954572424368133:nk])</cols>
      </table>
      <simple-id uuid='{F6870448-024A-4FC7-865C-5B68570E5042}' />
    </worksheet>
    <worksheet name='media'>
      <layout-options>
        <title>
          <formatted-text>
            <run>media</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_long_media)' name='federated.0wggnjo0vx7xzw1au99r813fotsn' />
          </datasources>
          <datasource-dependencies datasource='federated.0wggnjo0vx7xzw1au99r813fotsn'>
            <column caption='Quarter' datatype='string' name='[Calculation_685954572430835720]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Months]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Value]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_685954572430835720]' derivation='None' name='[none:Calculation_685954572430835720:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0wggnjo0vx7xzw1au99r813fotsn].[none:Calculation_685954572430835720:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wggnjo0vx7xzw1au99r813fotsn].[avg:Value:qk]</rows>
        <cols>([federated.0wggnjo0vx7xzw1au99r813fotsn].[none:Year:ok] / [federated.0wggnjo0vx7xzw1au99r813fotsn].[none:Calculation_685954572430835720:nk])</cols>
      </table>
      <simple-id uuid='{39CD586E-D55D-4A6B-BCDF-4DBE3A5EA505}' />
    </worksheet>
    <worksheet name='metal'>
      <layout-options>
        <title>
          <formatted-text>
            <run>metal</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_long_metal)' name='federated.1krbxfq1vhq84h1ga9em30n7wsgp' />
          </datasources>
          <datasource-dependencies datasource='federated.1krbxfq1vhq84h1ga9em30n7wsgp'>
            <column caption='Quarter' datatype='string' name='[Calculation_685954572433608713]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Months]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_685954572433608713]' derivation='None' name='[none:Calculation_685954572433608713:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1krbxfq1vhq84h1ga9em30n7wsgp].[none:Calculation_685954572433608713:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1krbxfq1vhq84h1ga9em30n7wsgp].[avg:Value:qk]</rows>
        <cols>([federated.1krbxfq1vhq84h1ga9em30n7wsgp].[none:Year:ok] / [federated.1krbxfq1vhq84h1ga9em30n7wsgp].[none:Calculation_685954572433608713:nk])</cols>
      </table>
      <simple-id uuid='{7EE9C708-5DC7-48CB-90F6-8CFE12A9947B}' />
    </worksheet>
    <worksheet name='oil'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Oil</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_long_oil)' name='federated.01d103x1jyosq31doin3i0kqsebp' />
          </datasources>
          <datasource-dependencies datasource='federated.01d103x1jyosq31doin3i0kqsebp'>
            <column caption='Quarter' datatype='string' name='[Calculation_685954572422836228]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Months]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_685954572422836228]' derivation='None' name='[none:Calculation_685954572422836228:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.01d103x1jyosq31doin3i0kqsebp].[none:Calculation_685954572422836228:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='229' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01d103x1jyosq31doin3i0kqsebp].[avg:Value:qk]</rows>
        <cols>([federated.01d103x1jyosq31doin3i0kqsebp].[none:Year:ok] / [federated.01d103x1jyosq31doin3i0kqsebp].[none:Calculation_685954572422836228:nk])</cols>
      </table>
      <simple-id uuid='{B730A1F7-38E0-4D07-B66C-97CB685F2995}' />
    </worksheet>
    <worksheet name='power'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Power</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_long_Po)' name='federated.0aghkan1klh4ph1gyrkbi1oxqkc6' />
          </datasources>
          <datasource-dependencies datasource='federated.0aghkan1klh4ph1gyrkbi1oxqkc6'>
            <column caption='Quarter' datatype='string' name='[Calculation_685954572417699843]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Months]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_685954572417699843]' derivation='None' name='[none:Calculation_685954572417699843:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0aghkan1klh4ph1gyrkbi1oxqkc6].[none:Calculation_685954572417699843:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0aghkan1klh4ph1gyrkbi1oxqkc6].[avg:Value:qk]</rows>
        <cols>([federated.0aghkan1klh4ph1gyrkbi1oxqkc6].[none:Year:ok] / [federated.0aghkan1klh4ph1gyrkbi1oxqkc6].[none:Calculation_685954572417699843:nk])</cols>
      </table>
      <simple-id uuid='{FB3F197E-8AF2-42EE-B26A-65C8BB8CB856}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='297'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='132'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1av105x13bso0l1483flz0vgg3d8].[none:Year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1av105x13bso0l1483flz0vgg3d8].[none:Calculation_685954572381306881:nk]' type='color' />
            <card param='[federated.1av105x13bso0l1483flz0vgg3d8].[none:Year:ok]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1av105x13bso0l1483flz0vgg3d8].[none:Months:nk]</field>
            <field>[federated.1av105x13bso0l1483flz0vgg3d8].[none:Year:ok]</field>
            <field>[federated.1av105x13bso0l1483flz0vgg3d8].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{65B6C9F5-4E2A-49CC-AC57-2FF3AC07ED69}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1av105x13bso0l1483flz0vgg3d8].[none:Calculation_685954572381306881:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1av105x13bso0l1483flz0vgg3d8].[none:Calculation_685954572381306881:nk]</field>
            <field>[federated.1av105x13bso0l1483flz0vgg3d8].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{27746992-8E84-4A2C-BBCA-623B72B098A0}' />
    </window>
    <window class='worksheet' name='Pharma'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0sc1ceo1ct0dkq171ubqc0l2gme2].[none:Year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0sc1ceo1ct0dkq171ubqc0l2gme2].[none:Calculation_685954572414775298:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0sc1ceo1ct0dkq171ubqc0l2gme2].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FB1E57E6-54B7-4A86-9EFE-904236DE3FE5}' />
    </window>
    <window class='worksheet' name='power'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aghkan1klh4ph1gyrkbi1oxqkc6].[none:Calculation_685954572417699843:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0aghkan1klh4ph1gyrkbi1oxqkc6].[none:Calculation_685954572417699843:nk]</field>
            <field>[federated.0aghkan1klh4ph1gyrkbi1oxqkc6].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0D2B6F01-63AB-4D73-9C8E-57A67D20E7D2}' />
    </window>
    <window class='worksheet' maximized='true' name='oil'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01d103x1jyosq31doin3i0kqsebp].[none:Calculation_685954572422836228:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.01d103x1jyosq31doin3i0kqsebp].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{91695931-366A-44F8-805E-46E703C73AF1}' />
    </window>
    <window class='worksheet' name='cement'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0uc9xdk1p8a2eu1go1k2t0c14b32].[none:Calculation_685954572424368133:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0uc9xdk1p8a2eu1go1k2t0c14b32].[none:Calculation_685954572424368133:nk]</field>
            <field>[federated.0uc9xdk1p8a2eu1go1k2t0c14b32].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{67380655-C756-46FB-93B7-E4DCDEF647A4}' />
    </window>
    <window class='worksheet' name='Fertilizer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05fm1pe1qt4mjp19ltvz4109j2ft].[none:Calculation_685954572426448902:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.05fm1pe1qt4mjp19ltvz4109j2ft].[none:Calculation_685954572426448902:nk]</field>
            <field>[federated.05fm1pe1qt4mjp19ltvz4109j2ft].[none:Value:nk]</field>
            <field>[federated.05fm1pe1qt4mjp19ltvz4109j2ft].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BCEE5699-B6BF-49E2-AF01-C999D2585FFE}' />
    </window>
    <window class='worksheet' name='IT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1awnv4417j85c411oxkos0d12eye].[none:Calculation_685954572429021191:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1awnv4417j85c411oxkos0d12eye].[none:Calculation_685954572429021191:nk]</field>
            <field>[federated.1awnv4417j85c411oxkos0d12eye].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D77B7225-73F4-4D0D-BE61-491B19B86455}' />
    </window>
    <window class='worksheet' name='media'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wggnjo0vx7xzw1au99r813fotsn].[none:Calculation_685954572430835720:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0wggnjo0vx7xzw1au99r813fotsn].[none:Calculation_685954572430835720:nk]</field>
            <field>[federated.0wggnjo0vx7xzw1au99r813fotsn].[none:Value:nk]</field>
            <field>[federated.0wggnjo0vx7xzw1au99r813fotsn].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{376537C7-96DA-450D-AFB0-81CA5095A84E}' />
    </window>
    <window class='worksheet' name='metal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1krbxfq1vhq84h1ga9em30n7wsgp].[none:Calculation_685954572433608713:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1krbxfq1vhq84h1ga9em30n7wsgp].[none:Calculation_685954572433608713:nk]</field>
            <field>[federated.1krbxfq1vhq84h1ga9em30n7wsgp].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B3CB8F28-7A73-4A48-8305-12C166CEE4EB}' />
    </window>
    <window class='worksheet' name='Telecom'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1yal7w41wlwzlj1h345rj122ldpl].[none:Calculation_685954572435763210:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1yal7w41wlwzlj1h345rj122ldpl].[none:Calculation_685954572435763210:nk]</field>
            <field>[federated.1yal7w41wlwzlj1h345rj122ldpl].[none:Value:nk]</field>
            <field>[federated.1yal7w41wlwzlj1h345rj122ldpl].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BE4C8E88-A7EA-469B-99F5-059F3DD00E5F}' />
    </window>
    <window class='worksheet' name='auto'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.186ernu0lypxmw1c2s0dv1qrtv3y].[none:Calculation_685954572438310923:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.186ernu0lypxmw1c2s0dv1qrtv3y].[none:Calculation_685954572438310923:nk]</field>
            <field>[federated.186ernu0lypxmw1c2s0dv1qrtv3y].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A1F70BF1-C661-45BE-82E7-5A3CDC1468AE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Fertilizer' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='IT' width='192'>
      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
      AT3tOYZLT18AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Pharma' width='192'>
      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
      /BMyVSE0AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2deYwj2X3fP3WQbLJPkn3f9zXnHiPJK6+OlWRZciyvJEu24CN2FMOIEMQw
      YANObBhG4iRwkEBBDCV2DDs2FDuy15ZkxVJkyTqs1WqPmZ2ZnaNnpu+7eTSbRzfPOl7+6Jme
      6WmS3ewm2T3N+gADTJM/Vv3qVX2r6r33e7+fJIQQWFhUKPJxO2BhcZwUTQBbW1vF2pSFRdko
      mgAMwyjWpiwsikImnSbfC/7a3D3U8rljYVE87t18k7VAlI7ubupbWgmurCJlYmykZDrdVSyt
      hpmYeI1L7/04Ln2DcFKm2qWixbc4f+kd2GSYXIlbfQCLJ5Obk3PYkmHmZucIbca5NzlJILDO
      W9evMT95i6aBMXo6exjqbuK733+dSHCFa9ev0TtyDlUCEAwONlpPAIsnk5aGGmYmZzj/7jEW
      J+/R4HGTjobp6GjH09pAa2M9UncXM4s+Rgd7cbpbcNTU422oBiAZWmAjJJCKNQwajUapr68v
      xqaOFSEEpmmiKMpxu2KxD3MTN/AMnafetr+tYRi7zunqwix1bd2WAB5HCEEsFjsVx2LxkFzX
      Z1Ffga69eRUUlTNnRpl46026xy7hqbbesk4aC9P3iCVSuFu6EIkQocgWA6NnqXUe4FZ6yihq
      J7h9/CIjXQ0sB5N0tHjIGNYk88lDZyslOHfuPNF1Hx3dvTjtKiAdt2PHQlEFsBHcYCMco6bW
      iSxVZoOefBS0TJJMJoGBzMzkJB39I9Q6K/NJXVQBuOUt1jaS2M0k/kiaSGA570SExXEgMTY6
      wPTkNHanC1VVWJidIZHWj9uxY2GnE7y1tXWk2dxMJoPdbi+aY8dJIpHA5XIdtxsWRSQej1Nd
      Xb3n853nXk1NTVkdOqk8GBSzRoFOH9nOqTUTbFHRWAKwqGgK7vovzU6yZdrpbqxhemGF9p5B
      mhr2vltZWDwJFCiAFDMzKzR2duILhBg/O87s9CLeuj6EEJyWxWWmaaLrlTkqclrJdU4LFIBM
      Q1MzbiVDUJPJZDKYSEjS9r/TgizLVizQKSPXOS1QAHbam2uJpiXOdHuYnluku2/wVF38D55i
      p+mYLLbJdk6LFgx3WrCC4U4nuYLhrFEgi4rGEoBFRWMJwKKisQRgUdFYArCoaCwBWFQ0lgAs
      KpqCY4G0TBpDgN2mkklnUG12VNWaNbV4MilYAG9dexNPaw9OEoQSgo6ODtx1VjCcxZNJwQKo
      r6slsLrG0EgXIuojuB6hvsaJaZql8O9YMAzDCoY7ZeQ6pwUKQEMIBYSJoZuoqoxhGMiyjCyf
      ju6EEAJFUVDVylwkflrJdU4LjgUyDAMkCVmSdrJtnabAMSsW6HRStMRYj4aUWndJiyed0/He
      YmFxSCwBWFQ0lgAsKhpLABYVjSUAi4rGEoBFRWMJwKKiKXgg/+a1KyjVHjq9LmaXfLR29dPq
      rSuFbxYWJadgAeiGBrpOcD3GmfNnmZtaoNldY8UCWZxoihQLpDMwfJ7VmSky1Q4S8Tg6shUL
      ZHHiyXVOCzzLCpthP66Wdjqa6pmdX2Sgv79ILlpYlB8rMdZjWMFwpxMrMZaFRRYsAVhUNJYA
      LCoaSwAWFY0lAIuKxhKARUVjCcCioilcAMJkayuOoaUJBALEk+kSuGVhUR4Knu8Pri5yaz7I
      cEcDaclFdW0p3LKwKA8FCcDUEtydXUUWBs6aBmIBHwvLBqMDnVYwnMWJpijBcJJi5/z5M8zM
      zGJoGXTdwOFUrGA4ixNP0RJjnXasWKDTiRULZGGRBUsAFhWNJQCLisYSgEVFYwnAoqKxBGBR
      0VgCsKhoLAFYVDQFC8DIJLh1Z4r0VoQbN24Q2UqVwi8Li7JQ8Hz//NwCGc1kZcXH6PgoszNL
      1A31lcK3Y0EIgRDiVMU2WZDznBb0BDDTm/jWo/hWlohnDB5EUZymGmGn6Vgs9udQsUB+f4CG
      GgeTs4t09Q3TUOMohW/HghULdDrJFQtkBcM9hiWA04kVDGdhkQVLABYVjSUAi4rGEoBFRWMJ
      wKKisQRgUdFYArCoaAoWQHBtGV9wAy0dZ2Z6mo1YvBR+WViUhQJjgQQ2ZzUr07MkPNVI9npq
      nFWl8czCogwUKAAJLblJShcMtnQS2QgyNbPI2HDPqQoeK3liLCEQegrJ5izdPix2UbQqkaFQ
      FFWRiMVihMMxqt2tVmKsAtGXL5P+xm9T/U+/gqTYSrYfi4cUqUqkyujZczt/tbe1H9WvisSY
      /z6SoqLf+xq28Z84bncqmpy37eDyLN/83g9YmJ8vozunHyFM9KU3qPrQ75F56wsII3PcLlU0
      OQWwsLRMeivEjdt3y+nPqUdEV5DsNchNYyjNY+iz3z1ulyqanAIYHh4E3aRncKSc/px69Nnv
      ovb+MJIkYX/q59Gu/QXCNI7brYolpwBSqQyNzS3MTk+V059TjRACfe57KH3vAkD29CLVtWHM
      v3zMnlUuOQUQj4VZWlrC5nCV059TjUhFQUsiu3t2PrM//fNkrn7eegocE1kFEFya5JU3b5NO
      pzGtBWNFw1h+A7l5HEl62Oxy0whSVR3G0hvH6FnlklUATV3DfORHX6C+rpZqlzVZUyyMxddQ
      B1/Y9Zkkydif+QUyb/4p1urU8pPzFejWvWnqPQ04JGuYrhgIQ8fwT6C0nt/zndJ2AWQVY/Xa
      MXhW2WSdCNPSSQYHR8mkooQSj2pEMH33NnFNYaC7iZn5FTp6BmlsqC6Tu08upv8Wcm0bkj17
      n8p+6dNoV/8Mpf0pKzVLGckqgORmiCuXr6ELmdbu/ke+kfB4PESXgqz6Q4yfHWd2ehFPXd9O
      QqnTgGmaRY8F0hdeRep9Pvd2m89ipDbRN+aQ6ruLum+L3Oc0qwDszhrqaqvZiGyyGdt8dDM4
      a9xUSStkdDsZLYOJhCRJp+quJcsyiqIUb4PCJL34A5wf/s9IOberYO9/D2LpNVTP6cm0d1LI
      dU6zCsDQDQbPPEVLo5vdl7VgdWketa6Jvs4mZmYX6eofPFUXfymy3ZmRJSSbE6m6Me92lfYL
      ZN76S+wXT097niSytX1WAVTXe3nwVn/58utcuvT2+38pDIyM7diNjY/t+a3FXrTJb6AOvh9J
      zv9UkZtGMUPTCNPY19aiOOQcBVqcvMFLL73EzMw8U4uBcvp0qhBCYCxfRu1+x762kuoAxbY9
      YWZRFnIKYC0Y4n0f/FFaWpoJLp2McIgbM37uLqwftxsFIeIBMDTkhoN1bOX6TkRkscReWTwg
      53qA/t4eXn/lFQZGz+GpOxnhEC/fWERVZEZ7Go/blQNjLL6O0n7xwPZK0yhGaLqg31gcnpxP
      AJvdgYrG5avXafS6y+lTTqZXNphdDR+3GwdGZBJok3+POvDeA/9Gbh7DDNwpoVcWj5JTANFw
      iJRp4/nn3p7LpKykNR1dN0mmNXTjZK8/FkKgL18h8cVfQu1+O3Lruf1/dB/Z3YcZniuhdxaP
      kvUVSM8k8QdCBNcWuD3pobvt+F85Vtc36WqpwzQFS4EofW0n46n0OEJPk371c5ir16l64bdQ
      mgsbKZNcHkQihDB1JLl065Ittsn6BPDNTXBnMUh1tYtnnrpQbp+yMu/bvugH2t3MrUWO2509
      CCEw1t4i8dIvINmcOH/yjwu++AEkxYZU341pdYTLQtZbTOfIM/zc4HlWFueYmbxL87MPRTBz
      7zZbukpvWwPzywHau3ppcteW3NHJpRCXRtuRJIkrd1d54emTNVtqzL9M+vU/3L7rt5w50raU
      pmHM9UkUT//+xhZHIuczVlZsdPUN0/XYddY7MMzdW3cIxyKYAhRVwTTNksYBCWBuLcwn3zOG
      KQR/9Z0NdMOgVPOlpmliGAUsUDF10q/9AfYP/Dtw9xb222x4RzD8t5EHPnC07VjskOucFpwZ
      bureHbqGhnHaZLo6DG7fXcR9drik4RDJtIZhCuqqqxAINN0koxk4HcXPqSOEQJKkgvIc6XOv
      IHv6UL3FuWOrjYOkb//Nqcm1dBLIdU4LToyVSessLyzS3uZmZTVAV29/yWOBQrEkntoqZFlC
      kmS8dS7Wo0m6W+wl2V8hwX1CmGhX/wzHC79VtHaQ6zsR6SiYupU4q0jkOqcFCsDG+aef3vmr
      wd10VL8OxNTyBoOd3p0D6G1rYHY1THfL8ReyM+ZfRqptRfYOFm+jig1JdSJSEaTq8rRxpfJE
      PGNnVsMMtD8c9uxrbWDmBEyICVMnc+VPsb/tl4r6FJQkCdk7iLmeOwTF8N9CX75StH1WKk+E
      AJYDMbqa63b+7m6pZ953/EOhxsKrSDXNyJ6Bom9bbhzCyDEjLIQg/cp/Q7v+56dmEdJxceIF
      oOkGsUQad+3DxfnN7mrCm0ky2vGlEhGmQebqn2F/9hdL0gdSGocxN2azfmeG5xHpTczoMpja
      vtsSQlhpV3Jw4gWwsr5Ji7saVXnoqqrItHhq8Ie3js0vY/FVJJcXpWm0JNuX3b2Y4fms32m3
      v4T9wk8j13Vg+G7tuy1j7Trpl/9LkT08HZx4Acz7IvS37w176G2pZ953PHHzwtTJXP089kuf
      Ltk+JGfD9r6Su1/1RCaOsfAD1IEXUAfei7F8ed9t6fe+jj79LespkIUTL4DZlTD9WeJ+Bjo8
      LBxTP8BYvoLkbED2DpV0P3JdB2ZkYddn+vzLKF1vQ3LUonRewli5mncbwtQx/LeQnG5EdLmU
      7j6RnGgBCCGYXQvT196w57v+djdTKxtl7wQKIbbv/hd/puTzH3LTMGboYT9ACBPt1hexnfno
      9vd17YhECDOee5GQGZpBdnlRu9+BEbhdUn+fRAoWwIP0J0KIkodAZHSDZFqjzuXY8527top4
      MlP+0OjMJiK5gdK2N8FVsVGaxzDW7+38ba5PgRAojQ+fPEr7RUx/7n6APv0tlN7nUTqfxVi7
      WVJ/n0QKFsDMvdu8+sobrCzP8taNt5hdKt164WA4gbfOhU3du0DcYVOpcdqJbKVKtv9smDEf
      cm1rWfb1YC7gwQ1Hu/0lbGc/tstG7XsXeo5+gBDmdjrG/nchewcxVq8ixMleS1FuCg44b2lp
      JimipBIG5y6cZ3ZyHtNsKkmRvJmVED2t9TmTSfW01DG1FMJds/cJcRTyFckzwgtQ11XaInoP
      sNVipjcxMimEqaGvXEV522d27Vt4RzBe+4Os/ojYCkJ1YFZ5wTRAgJ5OIKmVV9mzaEXyrl69
      Rc/AMDYpxeTde9ic7pIVyZtdizDW25SzYN1wVyOzaxGeO7d3wXksniYWT9P5yATaQdivSJ4R
      mUNtHChpEb0dVBW5qh45GURfuoyt+x3YXI8dT10Lmqwgx33I9Z27vsosvoKt7/n7vqpoTUNI
      63dQOy+V3vcTRq5zWuBVq3DpHW+nqclDe/cAfb19DPSU7nVgbi1CZ1PuC7intYEF/96RoIxm
      8NmXXuNPv3696D6ZobmSzPzmQmkewwjeRb/7d9jOfSK7Tc9zWUeD9NnvonQ9XNKqtD+FsVr8
      NjkKwtQxN33Htv8CBSDhqq6mutqFJEk4nU7kEo2EpDM60Xiadm/uxTZtnhpC0eSujrApBH/+
      Dzfpa2sgFE2SyhTvVUUIgYitINW1FW2b+yE3j6Pd/GtQHcgNXVlt1O4fQl96fddnIhVDxEPI
      jyyqUVrPYR5g4qyc6NPfJvGXP4fQ08ey/xM7DBoIx/HWOZHlPKkEFZn6Ggfr0QSwfYG+/NYC
      K8EYn3rfWRobXKysx4rnlKkj9CSSo/Qr4B4gNw5iLL6O/cJP57ZpGcf030ZoDwcE9MVXUfue
      3xVOLXuHMDdX815sQpiY8WBxnN8HYepoN76A7B1Anyt/mSghxMkVwLw/cqBw567mehb92zPC
      C/4oX375Hp/56CVsqsJ4byOzK8WLGhWJdSR7LZJSmnUI2ZAbelDHfxwlX2Y52YZU37UzaSaE
      QJ/+1p50LJIkITk9OUMsAEz/BIn//Ym8cwvFwlh+E8npxfHOX0G79TflD+zT9ZMrgO01AJ59
      7YY7vUyvbLCZSPPfv3yZf/His3juB86Ndjdxa654w7Tm+jRy03DRtncQJMWG80d+N+/IjSRJ
      qD3PPSyzlN7EDN5Dbh7fY6t0PJ0375B2629Q2i+gXf+LI/ueDyFMMlf+BPvTP7edPMDQEHmE
      WQqMzc2TKQAhBAu+6K41ALnovb824H/87RXe/0w/w13ene86m2pZDm7m+XVhmJEF5Iae/Q2P
      AaXzEvriawAYwbvbE3VZ0qoobRdzdoTNZBjDP4Hjfb+DPvc9zESoZP6avpsgScj3EwjYxn4M
      7e7f7fu7Ys5j6KurJ1MAphBEtlK7QqBz4alzMrOyQZ3Lwfuf3b0mt9blwKbKbMSSxfFrYx7Z
      W74RoEKQPb2IxDoivYk+823UwQ9kDdWQvQO7ZpcfRZ/6JmrvO5FdbmxnXkS7/n9K4utOOMkz
      v7CTBVsdeAF99rt5+ydmbI3klz+DyCSK4oe2tHwyBTAxH6S/vYEq+/5j7U6HymdevMQvfvhi
      1hGpM71NTC4V505mbswiu09WOpYHSLK6Pdvru4mxchWlPXs+J8m1/YQUmd2h5EIItImv7MQZ
      2c58DH3+ZUSqiIMI9zHDc9vhJF1ve+hXVT1K+9Pos9/N+hthGqT/8T8hEiH0xVeL4oe2fAIF
      IITgq69OHTjvjyRJvG2sA4ct92RZMfoBQk/fX6Pr3d/4mFD7nidz5U+2a5FVZR9AkCQJpfX8
      ntcg038bydmAVN+xbWd3YRv5MJkbf1lUH4UQaNf+HNv5T+4qFwtgO/cJtFtfzPqao09/ExQb
      Ve/9TfSJvy1Kh1mYZuECWJq6xbxvg0hwhetv3SQY3n7HLlZQWiASJ7qV4mxfc1G2N9LtZWr5
      6FGjIhVBcnn2nLSThNL+NMbyFdTB9+W3azmDsfbWzt9CCLSbL2Ebf3HX8dnO/ST61Df2rEk4
      CmLLj+G7gdq/N2Gw3DgIRgYzvDsE3IwHyVz+Exzv/nXkljOYmz5E8uije3JVVeGxQI2NXhY3
      NVIk7wdpbScdujXr5zvXF/jUC2dorD98beFvvznHc2c7j55c6j7VDgXDNIluJalxHmz4Mlvc
      iBleAldTeWKADou9Hmnwg9D1XF4/Rct59DtfQblvI1JRdN9t1Hf/692/kx3Igx8kfeMl1Gd+
      sSgualc/j3L2kxgokMVHefhDaLe/hPihf/XwN6/8PvLZT2A63CBA7n8BbfpbKOMfPfB+95xT
      ITA0rXAB2Ox2QKe+sY3GVomJe0s0e0Y4P9BKPKXx2Zde5+JQK594z/iuZYwHIaMZvDaxwu/+
      8/cWNdamp7WBlfUtzhzgqZIrFigTnkVtGi5PDNChUan5sd/b10q4u9FSMRQzjWSvJjP7LWxD
      70O17x1qVS7+FIm/+nkcFz+F5Kg5kndmPIi5cgXXO38FKUc7KqMfIvHX/wzHOz6DZKtCn38F
      EQ/gPPfRnWTB8tiPkfrmb2M/9/EDP5EfP6dGbBOb11voK5DJ3MIqqUiQdEZjamaB/sHtd3VZ
      lnjnuW7+7affQyC8xfdvFp7c9fLdVc72NVGbJf7/KAx1eLg9f7TZTTOygHxaqjdKElJN0/bi
      etNAv/c1bCMfzm7qqEUd+TCZG1840i6FMNFuvIRt5MNIau4nseSoRWm7gD73PUQqSvr7n6Xq
      vf9mV6ZsuaELhHmkSjra6iqKx1OoAGSGxs9x4fxZGhoaGBsb2/Na4bCpfOI9Z/jaa1MYBYRI
      m6bg629M84FLxR9mHO1pPHJGaTO8iOzuLY5Dx4wkSaidlzACdzEDE0j2WmR37vkN+8VPod/7
      +qFrl4lMnPR3/gPmxgy289kD+h7FduZjaBNfIv3aH2A782LW8lLq8AfRpv7hUP4AaEtLSKpS
      mlGg9sZaupvruXx39cC/WfBHURW5JNneOhpr8Ye3MI7QURfxwM4Q4mlAaT2PsXJ5e4nluY/n
      N7ZVo458iPQbf1TQYIIQAiM0Q/LLn0GqbaPqQ7+HZNu/3JbcNAKZBGbgTs4IWHXoR9Bnv3Po
      wQ1teRmlrq50w6AfeecIX/n+PcwDOvidq3O875m+kkSX2lQFb62TxcDhxrRFehOQwH60d+CT
      hOwdxPTdxghM7AqZzoYkSdif+lnM9cnt4cgDIISJfuf/kvr6b2D/oX+J49KnD1zwQ5IVHO/5
      Dao++O+3K2dm87+6Ednl2Z5RLhAhBNriEmp7R+kE0NVch7vOyY0Z/762W8kMN+cCPD1UujDj
      wU4P0yuHmxAzo8vIDT2nqiC4VFUHVfWovc8j2fYftZNUB1Uf/PdkXv8jjNB0XluR3iL1jd9C
      n/8+zo/+IWpX4QtwlOYx5PtzErlQR/8J2r2vFbxtdB2haSi1NaUTgCRJfPxdY3zpe3cxzPxP
      gVdvLXFptB1XVekyIZ/pa2Z6eeNQvzU3ZnPG4j/JOJ7/VWwXf+bA9nJ1E1Uv/Capb/5Ozhli
      Y2OOxJd+GaXlHFU/+h+RXfsHNB4WdeC9GCtvIrTCQl2MaBTZ5QKbrbQzwf3tbuw2hbsLuUdg
      TFPwratzJa/4MtjhYW4tUlDH/AFmaLq42Z9PCGrHM8iuwmqtKe0XsZ39GKl/+B2E8cjaZCHQ
      pr5J6qu/huOHfxX7xU+VvNq9pNhRmscfRsEeEG1xCVvHdrWhkk9rvvj8KF/83p2cnZV7SyHq
      qh20uKtL6oddVbaD7DYLzyJhhk/REGgRsJ15EcnpJnPlj7cnQw2NzKufQ7vxVzhf/Bxq57Nl
      80Ud/mDBr0Ha8jK2nu2RpZILYLTbi2EKph57/TBNwfUpH//r/13jo8+Plj7JlCwx2l34cKgQ
      JmZs9cCV3isBSZJxvOvXMRZ+gH7370h99dcQmTjOFz9XtpQxD1A6nsHcmEOkD54nNjM/j61j
      u39RsABMQ0fTDYQw2drc2neUR5FlPvauMb708t2d/DaL/ij/9aXX+OprU/zyR55lrKc8RSDO
      9DUxked1LCuZOEgylHEV2JOAZKui6kd+l8xbX0Adej+Od/96WVfK7fihOlB7nkOf/96B7IUQ
      6IEgatv2gEvB8/rzd66RrO7CLW2yqQkktYbhvva8vznX38xff3eCifkgr00sc2dhnU+8Z5xL
      Yx0lW1SfjcEOD197Lf8IxuOY8SCSy7MtAotdyA1duH7q88ceIKj0PLcdyp1jNvtRzHgcJFBq
      toe0CxZAd18/MyGdZFIwMDxwPzGWuW9irI+8c5jf/+IbvPjDI/zsB86iyDKmYVDOPGXuGgex
      eIroZoLqPIFxjwZOGaFZpIYiVH481RxvtjnROIoZ+ix6Jg05Ot4PzqmZyVD11FM757dAAZjM
      TE2xEDUZ623lxvW3aGjsPFBirGdHOzg/2Io9S5rDctLX5sYfSTJcm31G8vFgODO6iOLpO+FB
      cJWNkKvJSNL94L7seaR2zqnHg/1jD6NICzyrMiMX38HI/b+6Clwee9wXP8B4bxO35wK71g7n
      wwjNYD//yRJ7ZXEUJFlBaRzCCEyg5suekYWKe7Ed7vJyay544BgSEVtDKvPIhkXhyK1nMXw3
      Cv9dCXw50bS4q1mPJjjI9S8MDZGOIbkaS++YxZFQWg6X9a7iBOB02PDWOwlE4vvaik0fkstb
      8hlNi6Mje/q2l0oWWAaq4gQAcLavmdsHWChvRhb3ZFy2OJlIqgPJ2YAoMNFuRQpgsMPDjdkD
      CCC6vCu5rMXJRm4cxlyfLOw3JfLlRDPUuV1gb78FMurg+7CN/0SZvLI4KkrzOPpq/qKBj1OR
      AnA6bNQ67YT3Ka8kVzceeSG4RflQ2i9iBicLWiVWkQIA6Gt3M71yuPUBFicTyeVFJDeggPyh
      hxZAPLrOzRsPE2M9aYz1NHJnofQpwC3Kh6Q6kGqa99RWzseh5/c31v3oKDirHDtRnk8SfW0N
      /O3372WNYXpQAtbiyUNuPoOxdgOpoXfX57nO6aEF0Nk/ToeR4tadOc6eGdrZyZNCY52TjGaQ
      1vQ9IRpPoqAttpGbxzFm/xFl9Md3fZ7rnB5aAJGgj2V/kNbOvpJUiCwHQ50eZlYju/KQCiGQ
      ZRlFsSa/nkSk9gtob/xPZFnetcgq1zk9tADczW24m8tXLK4UDHR4uD0XLFoiXovjR3a6tzvB
      6RjkyJC9y74MPp1YRrq9TC5ZHeHThuzpw4wuHcy2xL6caDoa64hspUlrJzjjs0XBKM1jGMtX
      DmRb0QJQFZmmBhf+jf0D4yyeHJS2CxjB7GWgHqeiBQAw0t3IzQPEBVk8Ocju3j1FNnLaltiX
      E89wp4fJ5dJVQ7QoP1JVPZKsYh6gikzFC6Cvzc1KMGaN+58y5MbBA0WGVrwAXFU2XA4bgUhx
      Sm9anAyU1nMYK9f2tTu0AIRp4Pf59018+yQw0u1lqkilVC1OBnLLWQz//kskDy2AlblpNFNj
      anb5sJs4MQx0eLg9b3WETxOyuxexFchbeBuOMBOc1iV62lqZnVzANE00TUPXdSRJQpKkPbEX
      sixn/QzYFaSU7bMH28z22aPbzLfvfPsZaK1hNegkmdxOs53JZIjH42XZdzGO+6jtm2/fBz3G
      k3duBfS/QCIRB0VH0zSSyeQuO1VVkcQhe3+htUUWfCG8rd30tJ2e0kFCCGKxGPX1xS/VZHF8
      RKPRrOf00E8Ab1s33jYrY7LFk03FjwJZVDaWACwqGksAFhWNJQCLisYSgEVFszMKtLW1daQi
      EIlEApdrb8590zT3LJl8dGx3P9tcnxdiW+j+Eom9YREnxTdrf4ezfTCv87jtjgBqao6eACrb
      OGu5GsU0DIQkIcG++zMNA0lREHl8e/xYCvXtwcTNfrZHbQtd13MWKHnUVpjmTvscZX+F2hZy
      fA8muR5+LtB140DH96DNhRBZ2x6yn9OSlz2RZZnFWzcIyiqemjq6OtpRlexvXrIsoyVjXL85
      STi8gae5jaefOpf14Lc/M1leXMJEYisUoL57lA7vXiFvN4bJ9ctvkMqksTnsNI5YkCkAAAgD
      SURBVLSNMtDRUNBxmEaMubktNoJz6ELlwqVncdn2LrTe9i3Dy99+lcaONtrbO6mvdWU9jgcn
      avrOTeLxCL6ozPjZcbpastfvlWWZWHidyOb2U8of2ODSsxdz2oaWZ5ha3UDTTRyOKi49c4Fs
      VdlkWSYWXCWOg/l7d0Cp4tIPPYuas+03+fbfX6Ojr53Ori6qnY48x2cy8dY1YptRNKoYOfcU
      zfVVWW0lSWIj6GMrmQF0QhsaT10c2WP7wI/FqQn84U00FKqqXDx9fjyrba7fl6UPIMt2hsfH
      afHUsryySr6pZyEEsk2lwdOEp6aK/IsVJSKRKG6Ph4aGeuS89fYkXPUeBvoGGRvpwTAOMQEu
      KYSDS7jcnbR66/MeB0BTaycjg31shQPEEvljUgzTxO6sZmiwl3Qif8pGIx1Hkxx4PB6cVY78
      LgsYPHOGgd4Bap22vLaKTWVtaYamjhHctc68tiDR3tXPYF8X62urpPT8r8+mAKerlqGhLrZi
      +Su7p7aiKM5aPB43Dnv+e7Ss2Bg9M8Zg3zBVauEFF8tS+KpjdBgAqaYe52YSAVnvQgB2Vz1P
      XTgPkkTE59/3Iqt22tlKaniaWtD3KdNZ61SJmzJNtW48qfwXZDYkyUVbRxOxeAKzqhaXmu/+
      YcPrdnBvchpZtdNcld+39vZ2FteCZJJbdPcN5LV1t/bw4PnQ6M1f6d3TdX9b1S4UKf/tpLqh
      maef3s6QsbG2XwHDaoZHq5FliUZPHRnNoCpnCSyZMxeewhQCWUoT8Odve4erhtBmjPbGTpr3
      qaDr9npYWPIxNDSETOHldssigGRkjav3fHjqnQQCERrbcpcc0tObvH75Jm5PA+tLfp5payX3
      PS5NPKXAxhprih2Hu5WanNUfBaFIkhaPxJLfz+a6RGNT9oJquRBmklBE59y5UebuTLCZaaXO
      kasJDVb9Yc5fOMfm+gJLq1H6O3O/ci0srjJ27jxmKszk/CpnRnKHmSxNTxBMmFSpMpHNFK15
      2nNrfZm3ZgK4a6sIBKM0tbXmvPloyShvXJ3A7a5nfdnPs22t5Jatyes/eIV6TyOb6+t0X3iW
      ujxtf/3K6ziq60AkMKQ2Wlpzt4UvEKano4mphSX0uE5jU26Rr6346Orp5t7kNJKh0dhUYDUf
      USQikUjO70zTFBvhsBBCiFBwXRh5t2SKjY0NIYQQ0eC6yOyz3/X1dSFMQ8zevSOiiXRe21Bo
      XRimKXzLs2LNn91f0zRzHotpmmJ5flpMTEyI6bklYZpm3v0F15bExMSEuHtvWmSM/LbRjYCY
      uHNH3LlzV8RTWl5bI5MQkc2kEEKI9eB6XlvTNEQ4vH08oeC6yO/Fw7aPHKDtwxsbwhRCJGIR
      sZXKbx2LhIVmmMI0U2J9PZbXNrIREhndFBuBFbGw7M9rm9iKiq1kRmxFQ2JyZiH3NnOc07I8
      ARKhNWZXN3CtrZExZNyNuaNHteQWc3Pz+Hw+4okMT+WxBYPl+TkCgQDJZJLGvEW3BcHVZfz+
      AIaWwNt+iGRYQicQ2KCqpobwepB0Z3ue906TgD+IZK8inYgQ2UzTlKXj94D1QAAhZEw9RTAU
      o6fdk9PWv7rC+lYGVRLIjlq8edpoa32N2bUwzrUVNFPN2/aZRGyn7RNJjYt5215nfmYaR3UN
      yUSSkbPn89iarCzOI1QHRiZBY9dYHlsIr/tZ9vmRjAzOhvxF2Dc3QviiSWyKALU6r202ytIJ
      3o7BlpCkA+QPFebOUJYQYp8+gMA0t20R7Fv4zjRNkCQkJMxDRYELTPFgf4L9vHvgmySB2Gfl
      3O42yv/2bZpi+zgOsF3xyDHv3/bbR/Sg7fdjp+1h377aA5+R7v8/r62JhASStO3/PrZIHOz4
      slCWJ4Cr3o1zfYue/kFSm7G8nWDV4aKu2klTZw/t6cQ+Davg8dRT1dBMb5eCvo+1x+shRRXd
      7f2ENwrvBCPZ8LjrqGnsoLt1v0lDCY+3AdNeR1tjD5tb+X1zezxEUtDfPUh4nzxFDR4Pm4EI
      gwP9xML5Mx+46t1UheL0DgyR2IzmtVWrXNS6qmjp6kVKxTGB3BlSt9ve5WmlxyZh5m17CY/X
      TUZ20dXWR3hDy+uH2+MhtKXT3ztEZCN/+v06j4dwKsTA4ACxyP5ZIB6nLE+AwMI8jT09TE9O
      4lvz5W2qRGwdpdrL6tw0/uU1Mnm3nGYzIbEVXMYfCBJL5LMWBDfiVJlxVkMBfL5IwcchzDjJ
      jJ3w2jy+VR8JLZ8IdDaiGaTkBr71IOuh/CdyLRDG6xTMra7h8+Vfn7y8vEZHq4epme3XlXwE
      FhZo7ulm6gBtHw8Hsdc1sTw7hW/ZR/7LNMVWUiHmX8LvD7CVymdtsh5OYNdirIWC+P35hbji
      C9FcpzK7tILPlz915erSCh0dTUxOzeJfK6xAHpRJAC19fSiayXB/J6as5rz7A7jqm6h12RgZ
      HSID5B+5rqKltYGBkXG0ZILqvOPcMq1tTTR19iEl0zQ01hZ8HJJcTVNzHUOjY2R0Lc+wH4CN
      llYvHb1DmIkkdQ3530872lupaeygVhbUNOT3raOzHcVeS4e3Gpsz/wx+S18vsg5Dfe0IxZa3
      7WvczVQ7VEZHBtHY7/XASUtrPQOjY2TSKZw5R8MAFFrbmmjpHkAkkvu2fWdHK86GVtwOGVdd
      ftv2rk5kxUV3az1K1d5QnP049JLIx8m15OxJQ1hLIk8lua5PKxrUoqKxBGBR0VgCsKho/j9o
      nQUjsKvyXQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Telecom' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='auto' width='192'>
      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
      7Vjtffz/6b4AGEk8Rq8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='cement' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='media' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='metal' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='oil' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='power' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
