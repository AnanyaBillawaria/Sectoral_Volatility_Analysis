<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0805.0415                               -->
<workbook original-version='18.1' source-build='2023.2.1 (20232.23.0805.0415)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (df_long_Ph)' inline='true' name='federated.0sc1ceo1ct0dkq171ubqc0l2gme2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_long_Ph' name='excel-direct.0tene831v63myp1co2jyg14h84e9'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/lenovo/Desktop/PFA/df_long_Ph.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0tene831v63myp1co2jyg14h84e9' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' date-parse-format='MMMM' name='Months' ordinal='0' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0tene831v63myp1co2jyg14h84e9' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' date-parse-format='MMMM' name='Months' ordinal='0' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C241:no:A1:C241:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Months</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Months]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Months</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FAE25C2D80A3400F84FB4C5CA8D5E9FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FAE25C2D80A3400F84FB4C5CA8D5E9FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FAE25C2D80A3400F84FB4C5CA8D5E9FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='minmax' datatype='date' name='[Calculation_1648598996303790083]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='IF SUM([Value])=WINDOW_MIN(SUM([Value]))THEN MIN([Calculation_1648598996312637445])ELSEIF SUM([Value])=WINDOW_MAX(SUM([Value]))THEN MAX([Calculation_1648598996312637445])END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='date' datatype='date' datatype-customized='true' name='[Calculation_1648598996312637445]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy/MMMM&quot;, STR([Year])+ &quot;/&quot; +STR(([Months])) )) ' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_FAE25C2D80A3400F84FB4C5CA8D5E9FB]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='date (month/year) (copy)' datatype='integer' name='[date (month/year) (copy)_1648598996314218503]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='Calculation_1648598996312637445' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [Calculation_1648598996312637445])*100 + DATEPART(&apos;month&apos;, [Calculation_1648598996312637445]))' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[date (month/year)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='Calculation_1648598996312637445' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [Calculation_1648598996312637445])*100 + DATEPART(&apos;month&apos;, [Calculation_1648598996312637445]))' />
      </column>
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Year:ok]' type='palette'>
            <map to='#499894'>
              <bucket>2013</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2005</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2009</bucket>
            </map>
            <map to='#79706e'>
              <bucket>2017</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2014</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>2010</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>2023</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2006</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2021</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2011</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2018</bucket>
            </map>
            <map to='#d37295'>
              <bucket>2019</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>2022</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>2024</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2015</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>2012</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2007</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>2020</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>2016</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2008</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_FAE25C2D80A3400F84FB4C5CA8D5E9FB'>
            <properties context=''>
              <relation connection='excel-direct.0tene831v63myp1co2jyg14h84e9' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
                  <column datatype='string' date-parse-format='MMMM' name='Months' ordinal='0' />
                  <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='1' />
                  <column datatype='real' name='Value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df_long)' inline='true' name='federated.1av105x13bso0l1483flz0vgg3d8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_long' name='excel-direct.1ivd3hq1ggw5qd16ni5ue0ctfz3a'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/lenovo/Desktop/PFA/df_long.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ivd3hq1ggw5qd16ni5ue0ctfz3a' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C253:no:A1:C253:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1ivd3hq1ggw5qd16ni5ue0ctfz3a' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C253:no:A1:C253:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C253:no:A1:C253:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Months</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Months]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Months</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A9115E7755864442B29D4D34A1979428]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A9115E7755864442B29D4D34A1979428]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A9115E7755864442B29D4D34A1979428]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='quarter' datatype='string' name='[Calculation_685954572381306881]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_A9115E7755864442B29D4D34A1979428]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_685954572381306881]' derivation='None' name='[none:Calculation_685954572381306881:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_685954572381306881:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Q1&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Q4&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Q3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Q2&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_A9115E7755864442B29D4D34A1979428'>
            <properties context=''>
              <relation connection='excel-direct.1ivd3hq1ggw5qd16ni5ue0ctfz3a' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C253:no:A1:C253:0' header='yes' outcome='2'>
                  <column datatype='string' name='Months' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='real' name='Value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df_long_Po)' inline='true' name='federated.0aghkan1klh4ph1gyrkbi1oxqkc6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_long_Po' name='excel-direct.05vzqci1fhtdl810lh5ko0dtje1r'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/lenovo/Desktop/PFA/df_long_Po.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.05vzqci1fhtdl810lh5ko0dtje1r' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='string' date-parse-format='yyyy' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.05vzqci1fhtdl810lh5ko0dtje1r' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='string' date-parse-format='yyyy' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C241:no:A1:C241:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Months</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Months]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Months</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D8E728A476514741B8FBF2F234550CBF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D8E728A476514741B8FBF2F234550CBF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D8E728A476514741B8FBF2F234550CBF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Date' datatype='date' datatype-customized='true' name='[Calculation_1648598996351471629]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy/MMMM&quot;, STR([Year])+ &quot;/&quot; +STR(([Months])) ))' />
      </column>
      <column caption='minmax' datatype='date' name='[Calculation_1648598996356309007]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='IF SUM([Value])=WINDOW_MIN(SUM([Value]))THEN MIN([Calculation_1648598996351471629])ELSEIF SUM([Value])=WINDOW_MAX(SUM([Value]))THEN MAX([Calculation_1648598996351471629])END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='peak' datatype='real' datatype-customized='true' name='[Calculation_685954573091934232]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{ FIXED [Year] : MAX([Value]) }' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Date (M/Y)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='Calculation_1648598996351471629' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [Calculation_1648598996351471629])*100 + DATEPART(&apos;month&apos;, [Calculation_1648598996351471629]))' />
      </column>
      <column datatype='string' name='[Year]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_D8E728A476514741B8FBF2F234550CBF]' role='measure' type='quantitative' />
      <column-instance column='[Date (M/Y)]' derivation='None' name='[none:Date (M/Y):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Date (M/Y),Year)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Date (M/Y):ok]' />
          <groupfilter function='level-members' level='[none:Year:nk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_D8E728A476514741B8FBF2F234550CBF'>
            <properties context=''>
              <relation connection='excel-direct.05vzqci1fhtdl810lh5ko0dtje1r' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
                  <column datatype='string' name='Months' ordinal='0' />
                  <column datatype='string' date-parse-format='yyyy' name='Year' ordinal='1' />
                  <column datatype='real' name='Value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df_long_oil)' inline='true' name='federated.01d103x1jyosq31doin3i0kqsebp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_long_oil' name='excel-direct.1ml04n816395561gil1mi04m12yf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/lenovo/Desktop/PFA/df_long_oil.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ml04n816395561gil1mi04m12yf' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1ml04n816395561gil1mi04m12yf' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C241:no:A1:C241:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Months</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Months]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Months</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AE29C9BEB4964CF29CCE1BD8815C2957]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AE29C9BEB4964CF29CCE1BD8815C2957]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AE29C9BEB4964CF29CCE1BD8815C2957]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='date' datatype='date' name='[Calculation_1648598996448391184]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy/MMMM&quot;, STR([Year])+ &quot;/&quot; +STR(([Months])) ))' />
      </column>
      <column caption='minmax' datatype='date' datatype-customized='true' name='[Calculation_1648598996449706001]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='IF SUM([Value])= WINDOW_MIN(SUM([Value]))THEN MIN([Calculation_1648598996448391184])ELSEIF SUM([Value])=WINDOW_MAX(SUM([Value]))THEN MAX([Calculation_1648598996448391184])END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Quarter' datatype='string' name='[Calculation_685954572422836228]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
      </column>
      <column caption='max value of quarter' datatype='real' name='[Calculation_685954573079662609]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_685954572422836228], [Year] : MAX([Value]) }' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_AE29C9BEB4964CF29CCE1BD8815C2957]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[date (M/Y)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='Calculation_1648598996448391184' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [Calculation_1648598996448391184])*100 + DATEPART(&apos;month&apos;, [Calculation_1648598996448391184]))' />
      </column>
      <column-instance column='[Calculation_685954572422836228]' derivation='None' name='[none:Calculation_685954572422836228:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_685954572422836228:nk]' type='palette'>
            <map to='#76b7b2'>
              <bucket>&quot;Q4&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Q3&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Q1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Q2&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_AE29C9BEB4964CF29CCE1BD8815C2957'>
            <properties context=''>
              <relation connection='excel-direct.1ml04n816395561gil1mi04m12yf' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
                  <column datatype='string' name='Months' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='real' name='Value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df_long_telecom)' inline='true' name='federated.1yal7w41wlwzlj1h345rj122ldpl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_long_telecom' name='excel-direct.1wbz9qk0r8dznz18aaky71w1inmm'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/lenovo/Desktop/PFA/df_long_telecom.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1wbz9qk0r8dznz18aaky71w1inmm' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='integer' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1wbz9qk0r8dznz18aaky71w1inmm' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='integer' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C241:no:A1:C241:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Months</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Months]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Months</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C313F523C34146D0B17AB5DDDBCC922F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C313F523C34146D0B17AB5DDDBCC922F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C313F523C34146D0B17AB5DDDBCC922F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='date' datatype='date' name='[Calculation_1648598996464984093]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy/MMMM&quot;, STR([Year])+ &quot;/&quot; +STR(([Months])) ))' />
      </column>
      <column caption='minmax' datatype='date' name='[Calculation_1648598996471693342]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='IF SUM([Value])=WINDOW_MIN(SUM([Value]))THEN MIN([Calculation_1648598996464984093])ELSEIF SUM([Value])=WINDOW_MAX(SUM([Value]))THEN MAX([Calculation_1648598996464984093])END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Quarter' datatype='string' name='[Calculation_685954572435763210]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
      </column>
      <column caption='max value of quarter' datatype='integer' name='[Calculation_685954573090271255]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_685954572435763210], [Year] : MAX([Value]) }' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_C313F523C34146D0B17AB5DDDBCC922F]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[date (M/Y)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='Calculation_1648598996464984093' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [Calculation_1648598996464984093])*100 + DATEPART(&apos;month&apos;, [Calculation_1648598996464984093]))' />
      </column>
      <column-instance column='[Calculation_685954572435763210]' derivation='None' name='[none:Calculation_685954572435763210:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_685954572435763210:nk]' type='palette'>
            <map to='#76b7b2'>
              <bucket>&quot;Q4&quot;</bucket>
            </map>
            <map to='#a08400'>
              <bucket>&quot;Q1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Q3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Q2&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_C313F523C34146D0B17AB5DDDBCC922F'>
            <properties context=''>
              <relation connection='excel-direct.1wbz9qk0r8dznz18aaky71w1inmm' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
                  <column datatype='string' name='Months' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='integer' name='Value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df_long_cement)' inline='true' name='federated.0uc9xdk1p8a2eu1go1k2t0c14b32' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_long_cement' name='excel-direct.0kohpb61pbft4w18la8hf13ideyi'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/lenovo/Desktop/PFA/df_long_cement.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0kohpb61pbft4w18la8hf13ideyi' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0kohpb61pbft4w18la8hf13ideyi' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C241:no:A1:C241:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Months</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Months]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Months</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0427E221086D403EAF78FA71273858F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0427E221086D403EAF78FA71273858F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0427E221086D403EAF78FA71273858F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='date' datatype='date' name='[Calculation_1648598996451123218]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy/MMMM&quot;, STR([Year])+ &quot;/&quot; +STR(([Months])) ))' />
      </column>
      <column caption='minmax' datatype='date' name='[Calculation_1648598996451868691]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='IF SUM([Value])=WINDOW_MIN(SUM([Value]))THEN MIN([Calculation_1648598996451123218])ELSEIF SUM([Value])=WINDOW_MAX(SUM([Value]))THEN MAX([Calculation_1648598996451123218])END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Quarter ' datatype='string' name='[Calculation_685954572424368133]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
      </column>
      <column caption='max value of quarter' datatype='real' name='[Calculation_685954573080031250]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_685954572424368133], [Year] : MAX([Value]) }' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_0427E221086D403EAF78FA71273858F6]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[date (M/Y)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='Calculation_1648598996451123218' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [Calculation_1648598996451123218])*100 + DATEPART(&apos;month&apos;, [Calculation_1648598996451123218]))' />
      </column>
      <column-instance column='[Calculation_685954572424368133]' derivation='None' name='[none:Calculation_685954572424368133:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_685954572424368133:nk]' type='palette'>
            <map to='#76b7b2'>
              <bucket>&quot;Q4&quot;</bucket>
            </map>
            <map to='#baa094'>
              <bucket>&quot;Q1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Q3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Q2&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_0427E221086D403EAF78FA71273858F6'>
            <properties context=''>
              <relation connection='excel-direct.0kohpb61pbft4w18la8hf13ideyi' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
                  <column datatype='string' name='Months' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='real' name='Value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df_long_fertilizer)' inline='true' name='federated.05fm1pe1qt4mjp19ltvz4109j2ft' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_long_fertilizer' name='excel-direct.1s9vp6v0rvn4qy1dh8c2s1mnx7fa'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/lenovo/Desktop/PFA/df_long_fertilizer.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1s9vp6v0rvn4qy1dh8c2s1mnx7fa' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='integer' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1s9vp6v0rvn4qy1dh8c2s1mnx7fa' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='integer' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C241:no:A1:C241:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Months</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Months]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Months</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A4CB058E21334844A5795F892A3EE0B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A4CB058E21334844A5795F892A3EE0B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A4CB058E21334844A5795F892A3EE0B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='date' datatype='date' name='[Calculation_1648598996452335636]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy/MMMM&quot;, STR([Year])+ &quot;/&quot; +STR(([Months])) ))' />
      </column>
      <column caption='minmax' datatype='date' name='[Calculation_1648598996452528149]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='IF SUM([Value])=WINDOW_MIN(SUM([Value]))THEN MIN([Calculation_1648598996452335636])ELSEIF SUM([Value])=WINDOW_MAX(SUM([Value]))THEN MAX([Calculation_1648598996452335636])END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Quarter' datatype='string' name='[Calculation_685954572426448902]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
      </column>
      <column caption='max value of quarter' datatype='integer' name='[Calculation_685954573088178195]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_685954572426448902], [Year] : MAX([Value]) }' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_A4CB058E21334844A5795F892A3EE0B4]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[date (M/Y)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='Calculation_1648598996452335636' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [Calculation_1648598996452335636])*100 + DATEPART(&apos;month&apos;, [Calculation_1648598996452335636]))' />
      </column>
      <column-instance column='[Calculation_685954572426448902]' derivation='None' name='[none:Calculation_685954572426448902:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_685954572426448902:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Q1&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Q4&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Q3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Q2&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_A4CB058E21334844A5795F892A3EE0B4'>
            <properties context=''>
              <relation connection='excel-direct.1s9vp6v0rvn4qy1dh8c2s1mnx7fa' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
                  <column datatype='string' name='Months' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='integer' name='Value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df_long_it)' inline='true' name='federated.1awnv4417j85c411oxkos0d12eye' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_long_it' name='excel-direct.13rvxo0080h1eo10865fp06cd3vq'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/lenovo/Desktop/PFA/df_long_it.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.13rvxo0080h1eo10865fp06cd3vq' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.13rvxo0080h1eo10865fp06cd3vq' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C241:no:A1:C241:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Months</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Months]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Months</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BB4D07E7BE6B4C3E9F9B2DCA0738E29D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BB4D07E7BE6B4C3E9F9B2DCA0738E29D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BB4D07E7BE6B4C3E9F9B2DCA0738E29D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='date' datatype='date' name='[Calculation_1648598996454207510]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy/MMMM&quot;, STR([Year])+ &quot;/&quot; +STR(([Months])) ))' />
      </column>
      <column caption='minmax' datatype='date' name='[Calculation_1648598996463087639]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='IF SUM([Value])=WINDOW_MIN(SUM([Value]))THEN MIN([Calculation_1648598996454207510])ELSEIF SUM([Value])=WINDOW_MAX(SUM([Value]))THEN MAX([Calculation_1648598996454207510])END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Quarter' datatype='string' name='[Calculation_685954572429021191]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
      </column>
      <column caption='max value of quarter' datatype='real' name='[Calculation_685954573088370708]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_685954572429021191], [Year] : MAX([Value]) }' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_BB4D07E7BE6B4C3E9F9B2DCA0738E29D]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[date (M/Y)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='Calculation_1648598996454207510' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [Calculation_1648598996454207510])*100 + DATEPART(&apos;month&apos;, [Calculation_1648598996454207510]))' />
      </column>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_BB4D07E7BE6B4C3E9F9B2DCA0738E29D'>
            <properties context=''>
              <relation connection='excel-direct.13rvxo0080h1eo10865fp06cd3vq' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
                  <column datatype='string' name='Months' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='real' name='Value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df_long_media)' inline='true' name='federated.0wggnjo0vx7xzw1au99r813fotsn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_long_media' name='excel-direct.0t3lz1l0c5yasa11ag87o1ywe6su'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/lenovo/Desktop/PFA/df_long_media.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0t3lz1l0c5yasa11ag87o1ywe6su' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C229:no:A1:C229:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='integer' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0t3lz1l0c5yasa11ag87o1ywe6su' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C229:no:A1:C229:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='integer' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C229:no:A1:C229:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Months</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Months]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Months</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_153F82D0974B44A4B574099C93104F11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_153F82D0974B44A4B574099C93104F11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_153F82D0974B44A4B574099C93104F11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='date' datatype='date' name='[Calculation_1648598996463452185]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy/MMMM&quot;, STR([Year])+ &quot;/&quot; +STR(([Months])) ))' />
      </column>
      <column caption='minmax' datatype='date' name='[Calculation_1648598996463689754]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='IF SUM([Value])=WINDOW_MIN(SUM([Value]))THEN MIN([Calculation_1648598996463452185])ELSEIF SUM([Value])=WINDOW_MAX(SUM([Value]))THEN MAX([Calculation_1648598996463452185])END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Quarter' datatype='string' name='[Calculation_685954572430835720]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
      </column>
      <column caption='max value of quarter' datatype='integer' name='[Calculation_685954573089476629]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_685954572430835720], [Year] : MAX([Value]) }' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_153F82D0974B44A4B574099C93104F11]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[date (M/Y)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='Calculation_1648598996463452185' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [Calculation_1648598996463452185])*100 + DATEPART(&apos;month&apos;, [Calculation_1648598996463452185]))' />
      </column>
      <column-instance column='[Calculation_685954572430835720]' derivation='None' name='[none:Calculation_685954572430835720:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_685954572430835720:nk]' type='palette'>
            <map to='#76b7b2'>
              <bucket>&quot;Q4&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Q1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Q3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Q2&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_153F82D0974B44A4B574099C93104F11'>
            <properties context=''>
              <relation connection='excel-direct.0t3lz1l0c5yasa11ag87o1ywe6su' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C229:no:A1:C229:0' header='yes' outcome='2'>
                  <column datatype='string' name='Months' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='integer' name='Value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df_long_metal)' inline='true' name='federated.1krbxfq1vhq84h1ga9em30n7wsgp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_long_metal' name='excel-direct.0u7vmrg0vuev261h71bec00l0er4'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/lenovo/Desktop/PFA/df_long_metal.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0u7vmrg0vuev261h71bec00l0er4' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0u7vmrg0vuev261h71bec00l0er4' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C241:no:A1:C241:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Months</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Months]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Months</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F7CE68FF07EF47049B14216BFF0CFB9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F7CE68FF07EF47049B14216BFF0CFB9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F7CE68FF07EF47049B14216BFF0CFB9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='date' datatype='date' name='[Calculation_1648598996464066587]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy/MMMM&quot;, STR([Year])+ &quot;/&quot; +STR(([Months])) ))' />
      </column>
      <column caption='minmax' datatype='date' name='[Calculation_1648598996464611356]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='IF SUM([Value])=WINDOW_MIN(SUM([Value]))THEN MIN([Calculation_1648598996464066587])ELSEIF SUM([Value])=WINDOW_MAX(SUM([Value]))THEN MAX([Calculation_1648598996464066587])END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Quarter' datatype='string' name='[Calculation_685954572433608713]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
      </column>
      <column caption='max value of quarter' datatype='real' name='[Calculation_685954573089628182]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_685954572433608713], [Year] : MAX([Value]) }' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_F7CE68FF07EF47049B14216BFF0CFB9C]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[date (M/Y)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='Calculation_1648598996464066587' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [Calculation_1648598996464066587])*100 + DATEPART(&apos;month&apos;, [Calculation_1648598996464066587]))' />
      </column>
      <column-instance column='[Calculation_685954572433608713]' derivation='None' name='[none:Calculation_685954572433608713:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_685954572433608713:nk]' type='palette'>
            <map to='#76b7b2'>
              <bucket>&quot;Q4&quot;</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>&quot;Q1&quot;</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>&quot;Q3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Q2&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_F7CE68FF07EF47049B14216BFF0CFB9C'>
            <properties context=''>
              <relation connection='excel-direct.0u7vmrg0vuev261h71bec00l0er4' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
                  <column datatype='string' name='Months' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='real' name='Value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df_long_auto)' inline='true' name='federated.186ernu0lypxmw1c2s0dv1qrtv3y' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_long_auto' name='excel-direct.1cpf67n1dx76py13g5f8t1ri8pzj'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/lenovo/Desktop/PFA/df_long_auto.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1cpf67n1dx76py13g5f8t1ri8pzj' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1cpf67n1dx76py13g5f8t1ri8pzj' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
            <column datatype='string' name='Months' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C241:no:A1:C241:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Months</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Months]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Months</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_85C66898DEF54CFB8B750CF1111D701F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_85C66898DEF54CFB8B750CF1111D701F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_85C66898DEF54CFB8B750CF1111D701F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='date' datatype='date' name='[Calculation_1648598996472086559]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy/MMMM&quot;, STR([Year])+ &quot;/&quot; +STR(([Months])) ))' />
      </column>
      <column caption='minmax' datatype='date' name='[Calculation_1648598996472463392]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='IF SUM([Value])=WINDOW_MIN(SUM([Value]))THEN MIN([Calculation_1648598996472086559])ELSEIF SUM([Value])=WINDOW_MAX(SUM([Value]))THEN MAX([Calculation_1648598996472086559])END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Quarter' datatype='string' name='[Calculation_685954572438310923]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_685954572448813068]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='max value of quarter' datatype='real' name='[Calculation_685954572450459661]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_685954572438310923], [Year] : MAX([Value]) }' />
      </column>
      <column caption='Max Value per Year' datatype='real' name='[Calculation_685954572450852878]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Year] : MAX([Value]) }' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_85C66898DEF54CFB8B750CF1111D701F]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[date (M/Y)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='Calculation_1648598996472086559' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [Calculation_1648598996472086559])*100 + DATEPART(&apos;month&apos;, [Calculation_1648598996472086559]))' />
      </column>
      <column-instance column='[Calculation_685954572438310923]' derivation='None' name='[none:Calculation_685954572438310923:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_685954572438310923:nk]' type='palette'>
            <map to='#76b7b2'>
              <bucket>&quot;Q4&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Q3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Q2&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Q1&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_85C66898DEF54CFB8B750CF1111D701F'>
            <properties context=''>
              <relation connection='excel-direct.1cpf67n1dx76py13g5f8t1ri8pzj' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C241:no:A1:C241:0' header='yes' outcome='2'>
                  <column datatype='string' name='Months' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='real' name='Value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_27BFB7D16BD8415E91E0263A297EE969]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Pharma' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Year' />
        <param name='target' value='Pharma' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Fertilizer'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='22'>Fertilizer</run>
            <run fontalignment='1'>Æ&#10; </run>
            <run fontalignment='1' fontsize='12'>Ananya Billawaria</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_long_fertilizer)' name='federated.05fm1pe1qt4mjp19ltvz4109j2ft' />
          </datasources>
          <datasource-dependencies datasource='federated.05fm1pe1qt4mjp19ltvz4109j2ft'>
            <column caption='date' datatype='date' name='[Calculation_1648598996452335636]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy/MMMM&quot;, STR([Year])+ &quot;/&quot; +STR(([Months])) ))' />
            </column>
            <column caption='minmax' datatype='date' name='[Calculation_1648598996452528149]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='IF SUM([Value])=WINDOW_MIN(SUM([Value]))THEN MIN([Calculation_1648598996452335636])ELSEIF SUM([Value])=WINDOW_MAX(SUM([Value]))THEN MAX([Calculation_1648598996452335636])END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Months]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[date (M/Y)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='Calculation_1648598996452335636' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [Calculation_1648598996452335636])*100 + DATEPART(&apos;month&apos;, [Calculation_1648598996452335636]))' />
            </column>
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date (M/Y)]' derivation='None' name='[none:date (M/Y):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1648598996452528149]' derivation='User' name='[usr:Calculation_1648598996452528149:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height' field='[federated.05fm1pe1qt4mjp19ltvz4109j2ft].[none:Year:ok]' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05fm1pe1qt4mjp19ltvz4109j2ft].[none:Year:ok]' />
              <text column='[federated.05fm1pe1qt4mjp19ltvz4109j2ft].[usr:Calculation_1648598996452528149:ok]' />
              <lod column='[federated.05fm1pe1qt4mjp19ltvz4109j2ft].[none:Year:qk]' />
            </encodings>
            <reference-line axis-column='[federated.05fm1pe1qt4mjp19ltvz4109j2ft].[sum:Value:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.05fm1pe1qt4mjp19ltvz4109j2ft].[sum:Value:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05fm1pe1qt4mjp19ltvz4109j2ft].[sum:Value:qk]</rows>
        <cols>[federated.05fm1pe1qt4mjp19ltvz4109j2ft].[none:date (M/Y):ok]</cols>
      </table>
      <simple-id uuid='{A93F58E8-22D3-4748-A3CB-8F74D74CBCC5}' />
    </worksheet>
    <worksheet name='IT'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='22'>IT</run>
            <run fontalignment='1'>Æ&#10; </run>
            <run fontalignment='1' fontsize='12'>Ananya Billawaria</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_long_it)' name='federated.1awnv4417j85c411oxkos0d12eye' />
          </datasources>
          <datasource-dependencies datasource='federated.1awnv4417j85c411oxkos0d12eye'>
            <column caption='date' datatype='date' name='[Calculation_1648598996454207510]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy/MMMM&quot;, STR([Year])+ &quot;/&quot; +STR(([Months])) ))' />
            </column>
            <column caption='minmax' datatype='date' name='[Calculation_1648598996463087639]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='IF SUM([Value])=WINDOW_MIN(SUM([Value]))THEN MIN([Calculation_1648598996454207510])ELSEIF SUM([Value])=WINDOW_MAX(SUM([Value]))THEN MAX([Calculation_1648598996454207510])END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Months]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[date (M/Y)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='Calculation_1648598996454207510' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [Calculation_1648598996454207510])*100 + DATEPART(&apos;month&apos;, [Calculation_1648598996454207510]))' />
            </column>
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date (M/Y)]' derivation='None' name='[none:date (M/Y):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1648598996463087639]' derivation='User' name='[usr:Calculation_1648598996463087639:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1awnv4417j85c411oxkos0d12eye].[none:Year:ok]' />
              <lod column='[federated.1awnv4417j85c411oxkos0d12eye].[none:Year:qk]' />
              <text column='[federated.1awnv4417j85c411oxkos0d12eye].[usr:Calculation_1648598996463087639:ok]' />
            </encodings>
            <reference-line axis-column='[federated.1awnv4417j85c411oxkos0d12eye].[sum:Value:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1awnv4417j85c411oxkos0d12eye].[sum:Value:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1awnv4417j85c411oxkos0d12eye].[sum:Value:qk]</rows>
        <cols>[federated.1awnv4417j85c411oxkos0d12eye].[none:date (M/Y):ok]</cols>
      </table>
      <simple-id uuid='{CE9F890A-2395-447C-AD2E-D5A582FA9CCA}' />
    </worksheet>
    <worksheet name='Pharma'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='22'>           Pharma  </run>
            <run bold='true' fontalignment='1' fontname='Tableau Bold'>Æ </run>
            <run fontalignment='1'>Æ             &#10;    </run>
            <run fontalignment='1' fontsize='12'>Ananya Billawaria</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_long_Ph)' name='federated.0sc1ceo1ct0dkq171ubqc0l2gme2' />
          </datasources>
          <datasource-dependencies datasource='federated.0sc1ceo1ct0dkq171ubqc0l2gme2'>
            <column caption='minmax' datatype='date' name='[Calculation_1648598996303790083]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='IF SUM([Value])=WINDOW_MIN(SUM([Value]))THEN MIN([Calculation_1648598996312637445])ELSEIF SUM([Value])=WINDOW_MAX(SUM([Value]))THEN MAX([Calculation_1648598996312637445])END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='date' datatype='date' datatype-customized='true' name='[Calculation_1648598996312637445]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy/MMMM&quot;, STR([Year])+ &quot;/&quot; +STR(([Months])) )) ' />
            </column>
            <column datatype='string' name='[Months]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[date (month/year)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='Calculation_1648598996312637445' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [Calculation_1648598996312637445])*100 + DATEPART(&apos;month&apos;, [Calculation_1648598996312637445]))' />
            </column>
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date (month/year)]' derivation='None' name='[none:date (month/year):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1648598996303790083]' derivation='User' name='[usr:Calculation_1648598996303790083:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_1648598996312637445]' derivation='Year' name='[yr:Calculation_1648598996312637445:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0sc1ceo1ct0dkq171ubqc0l2gme2].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0sc1ceo1ct0dkq171ubqc0l2gme2].[none:date (month/year):ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:date (month/year):ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:date (month/year):ok]' member='202402' />
                <groupfilter function='member' level='[none:date (month/year):ok]' member='202403' />
                <groupfilter function='member' level='[none:date (month/year):ok]' member='202406' />
                <groupfilter function='member' level='[none:date (month/year):ok]' member='202407' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0sc1ceo1ct0dkq171ubqc0l2gme2].[none:date (month/year):ok]</column>
            <column>[federated.0sc1ceo1ct0dkq171ubqc0l2gme2].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0sc1ceo1ct0dkq171ubqc0l2gme2].[sum:Value:qk]' field-type='quantitative' max='95.0' min='-28.690404624277459' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0sc1ceo1ct0dkq171ubqc0l2gme2].[none:Year:ok]' />
              <lod column='[federated.0sc1ceo1ct0dkq171ubqc0l2gme2].[yr:Calculation_1648598996312637445:qk]' />
              <text column='[federated.0sc1ceo1ct0dkq171ubqc0l2gme2].[usr:Calculation_1648598996303790083:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0sc1ceo1ct0dkq171ubqc0l2gme2].[sum:Value:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0sc1ceo1ct0dkq171ubqc0l2gme2].[sum:Value:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0sc1ceo1ct0dkq171ubqc0l2gme2].[sum:Value:qk]</rows>
        <cols>[federated.0sc1ceo1ct0dkq171ubqc0l2gme2].[none:date (month/year):ok]</cols>
      </table>
      <simple-id uuid='{2B958269-96C1-41B6-B98B-AB3D3A904585}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#e15759' fontname='Elephant' fontsize='22'>Volatility</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_long)' name='federated.1av105x13bso0l1483flz0vgg3d8' />
          </datasources>
          <datasource-dependencies datasource='federated.1av105x13bso0l1483flz0vgg3d8'>
            <column caption='quarter' datatype='string' name='[Calculation_685954572381306881]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE MONTH(DATEPARSE(&apos;MMMM&apos;, [Months]))&#13;&#10;  WHEN 4 THEN &apos;Q1&apos;&#13;&#10;  WHEN 5 THEN &apos;Q1&apos;&#13;&#10;  WHEN 6 THEN &apos;Q1&apos;&#13;&#10;  WHEN 7 THEN &apos;Q2&apos;&#13;&#10;  WHEN 8 THEN &apos;Q2&apos;&#13;&#10;  WHEN 9 THEN &apos;Q2&apos;&#13;&#10;  WHEN 10 THEN &apos;Q3&apos;&#13;&#10;  WHEN 11 THEN &apos;Q3&apos;&#13;&#10;  WHEN 12 THEN &apos;Q3&apos;&#13;&#10;  WHEN 1 THEN &apos;Q4&apos;&#13;&#10;  WHEN 2 THEN &apos;Q4&apos;&#13;&#10;  WHEN 3 THEN &apos;Q4&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Months]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_685954572381306881]' derivation='None' name='[none:Calculation_685954572381306881:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1av105x13bso0l1483flz0vgg3d8].[none:Year:ok]'>
            <groupfilter from='2005' function='range' level='[none:Year:ok]' to='2024' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1av105x13bso0l1483flz0vgg3d8].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1av105x13bso0l1483flz0vgg3d8].[none:Calculation_685954572381306881:nk]' />
              <color column='[federated.1av105x13bso0l1483flz0vgg3d8].[none:Calculation_685954572381306881:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#333333' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1av105x13bso0l1483flz0vgg3d8].[sum:Value:qk]</rows>
        <cols>([federated.1av105x13bso0l1483flz0vgg3d8].[none:Year:ok] / [federated.1av105x13bso0l1483flz0vgg3d8].[none:Calculation_685954572381306881:nk])</cols>
      </table>
      <simple-id uuid='{5A8010F9-9ACF-4CA5-AE78-3EE3EC2ACA78}' />
    </worksheet>
    <worksheet name='Telecom'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='22'>Telecom</run>
            <run fontalignment='1'>Æ&#10; </run>
            <run fontalignment='1' fontsize='12'>Ananya Billawaria</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_long_telecom)' name='federated.1yal7w41wlwzlj1h345rj122ldpl' />
          </datasources>
          <datasource-dependencies datasource='federated.1yal7w41wlwzlj1h345rj122ldpl'>
            <column caption='date' datatype='date' name='[Calculation_1648598996464984093]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy/MMMM&quot;, STR([Year])+ &quot;/&quot; +STR(([Months])) ))' />
            </column>
            <column caption='minmax' datatype='date' name='[Calculation_1648598996471693342]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='IF SUM([Value])=WINDOW_MIN(SUM([Value]))THEN MIN([Calculation_1648598996464984093])ELSEIF SUM([Value])=WINDOW_MAX(SUM([Value]))THEN MAX([Calculation_1648598996464984093])END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Months]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[date (M/Y)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='Calculation_1648598996464984093' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [Calculation_1648598996464984093])*100 + DATEPART(&apos;month&apos;, [Calculation_1648598996464984093]))' />
            </column>
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date (M/Y)]' derivation='None' name='[none:date (M/Y):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1648598996471693342]' derivation='User' name='[usr:Calculation_1648598996471693342:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1yal7w41wlwzlj1h345rj122ldpl].[none:Year:ok]' />
              <lod column='[federated.1yal7w41wlwzlj1h345rj122ldpl].[none:Year:qk]' />
              <text column='[federated.1yal7w41wlwzlj1h345rj122ldpl].[usr:Calculation_1648598996471693342:ok]' />
            </encodings>
            <reference-line axis-column='[federated.1yal7w41wlwzlj1h345rj122ldpl].[sum:Value:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1yal7w41wlwzlj1h345rj122ldpl].[sum:Value:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yal7w41wlwzlj1h345rj122ldpl].[sum:Value:qk]</rows>
        <cols>[federated.1yal7w41wlwzlj1h345rj122ldpl].[none:date (M/Y):ok]</cols>
      </table>
      <simple-id uuid='{0C585C52-56DA-4651-BC73-981233A968A1}' />
    </worksheet>
    <worksheet name='auto'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='22'>Auto</run>
            <run fontalignment='1'>Æ&#10; </run>
            <run fontalignment='1' fontsize='12'>Ananya Billawaria</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_long_auto)' name='federated.186ernu0lypxmw1c2s0dv1qrtv3y' />
          </datasources>
          <datasource-dependencies datasource='federated.186ernu0lypxmw1c2s0dv1qrtv3y'>
            <column caption='date' datatype='date' name='[Calculation_1648598996472086559]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy/MMMM&quot;, STR([Year])+ &quot;/&quot; +STR(([Months])) ))' />
            </column>
            <column caption='minmax' datatype='date' name='[Calculation_1648598996472463392]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='IF SUM([Value])=WINDOW_MIN(SUM([Value]))THEN MIN([Calculation_1648598996472086559])ELSEIF SUM([Value])=WINDOW_MAX(SUM([Value]))THEN MAX([Calculation_1648598996472086559])END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Months]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[date (M/Y)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='Calculation_1648598996472086559' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [Calculation_1648598996472086559])*100 + DATEPART(&apos;month&apos;, [Calculation_1648598996472086559]))' />
            </column>
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date (M/Y)]' derivation='None' name='[none:date (M/Y):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1648598996472463392]' derivation='User' name='[usr:Calculation_1648598996472463392:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.186ernu0lypxmw1c2s0dv1qrtv3y].[none:Year:ok]' />
              <lod column='[federated.186ernu0lypxmw1c2s0dv1qrtv3y].[none:Year:qk]' />
              <text column='[federated.186ernu0lypxmw1c2s0dv1qrtv3y].[usr:Calculation_1648598996472463392:ok]' />
            </encodings>
            <reference-line axis-column='[federated.186ernu0lypxmw1c2s0dv1qrtv3y].[sum:Value:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.186ernu0lypxmw1c2s0dv1qrtv3y].[sum:Value:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.186ernu0lypxmw1c2s0dv1qrtv3y].[sum:Value:qk]</rows>
        <cols>[federated.186ernu0lypxmw1c2s0dv1qrtv3y].[none:date (M/Y):ok]</cols>
      </table>
      <simple-id uuid='{478AD6A2-4CE0-4948-BF75-72F1717E9A27}' />
    </worksheet>
    <worksheet name='cement'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='22'>Cement</run>
            <run fontalignment='1'>Æ&#10; </run>
            <run fontalignment='1' fontsize='12'>Ananya Billawaria</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_long_cement)' name='federated.0uc9xdk1p8a2eu1go1k2t0c14b32' />
          </datasources>
          <datasource-dependencies datasource='federated.0uc9xdk1p8a2eu1go1k2t0c14b32'>
            <column caption='date' datatype='date' name='[Calculation_1648598996451123218]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy/MMMM&quot;, STR([Year])+ &quot;/&quot; +STR(([Months])) ))' />
            </column>
            <column caption='minmax' datatype='date' name='[Calculation_1648598996451868691]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='IF SUM([Value])=WINDOW_MIN(SUM([Value]))THEN MIN([Calculation_1648598996451123218])ELSEIF SUM([Value])=WINDOW_MAX(SUM([Value]))THEN MAX([Calculation_1648598996451123218])END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Months]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[date (M/Y)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='Calculation_1648598996451123218' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [Calculation_1648598996451123218])*100 + DATEPART(&apos;month&apos;, [Calculation_1648598996451123218]))' />
            </column>
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date (M/Y)]' derivation='None' name='[none:date (M/Y):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1648598996451868691]' derivation='User' name='[usr:Calculation_1648598996451868691:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0uc9xdk1p8a2eu1go1k2t0c14b32].[none:Year:ok]' />
              <lod column='[federated.0uc9xdk1p8a2eu1go1k2t0c14b32].[none:Year:qk]' />
              <text column='[federated.0uc9xdk1p8a2eu1go1k2t0c14b32].[usr:Calculation_1648598996451868691:ok]' />
            </encodings>
            <reference-line axis-column='[federated.0uc9xdk1p8a2eu1go1k2t0c14b32].[sum:Value:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0uc9xdk1p8a2eu1go1k2t0c14b32].[sum:Value:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0uc9xdk1p8a2eu1go1k2t0c14b32].[sum:Value:qk]</rows>
        <cols>[federated.0uc9xdk1p8a2eu1go1k2t0c14b32].[none:date (M/Y):ok]</cols>
      </table>
      <simple-id uuid='{F6870448-024A-4FC7-865C-5B68570E5042}' />
    </worksheet>
    <worksheet name='media'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='22'>Media</run>
            <run fontalignment='1'>Æ&#10; </run>
            <run fontalignment='1' fontsize='12'>Ananya Billawaria</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_long_media)' name='federated.0wggnjo0vx7xzw1au99r813fotsn' />
          </datasources>
          <datasource-dependencies datasource='federated.0wggnjo0vx7xzw1au99r813fotsn'>
            <column caption='date' datatype='date' name='[Calculation_1648598996463452185]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy/MMMM&quot;, STR([Year])+ &quot;/&quot; +STR(([Months])) ))' />
            </column>
            <column caption='minmax' datatype='date' name='[Calculation_1648598996463689754]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='IF SUM([Value])=WINDOW_MIN(SUM([Value]))THEN MIN([Calculation_1648598996463452185])ELSEIF SUM([Value])=WINDOW_MAX(SUM([Value]))THEN MAX([Calculation_1648598996463452185])END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Months]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[date (M/Y)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='Calculation_1648598996463452185' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [Calculation_1648598996463452185])*100 + DATEPART(&apos;month&apos;, [Calculation_1648598996463452185]))' />
            </column>
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date (M/Y)]' derivation='None' name='[none:date (M/Y):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1648598996463689754]' derivation='User' name='[usr:Calculation_1648598996463689754:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0wggnjo0vx7xzw1au99r813fotsn].[none:Year:ok]' />
              <lod column='[federated.0wggnjo0vx7xzw1au99r813fotsn].[none:Year:qk]' />
              <text column='[federated.0wggnjo0vx7xzw1au99r813fotsn].[usr:Calculation_1648598996463689754:ok]' />
            </encodings>
            <reference-line axis-column='[federated.0wggnjo0vx7xzw1au99r813fotsn].[sum:Value:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0wggnjo0vx7xzw1au99r813fotsn].[sum:Value:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wggnjo0vx7xzw1au99r813fotsn].[sum:Value:qk]</rows>
        <cols>[federated.0wggnjo0vx7xzw1au99r813fotsn].[none:date (M/Y):ok]</cols>
      </table>
      <simple-id uuid='{39CD586E-D55D-4A6B-BCDF-4DBE3A5EA505}' />
    </worksheet>
    <worksheet name='metal'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='22'>Metal </run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontsize='12'>Ananya Billawaria</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_long_metal)' name='federated.1krbxfq1vhq84h1ga9em30n7wsgp' />
          </datasources>
          <datasource-dependencies datasource='federated.1krbxfq1vhq84h1ga9em30n7wsgp'>
            <column caption='date' datatype='date' name='[Calculation_1648598996464066587]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy/MMMM&quot;, STR([Year])+ &quot;/&quot; +STR(([Months])) ))' />
            </column>
            <column caption='minmax' datatype='date' name='[Calculation_1648598996464611356]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='IF SUM([Value])=WINDOW_MIN(SUM([Value]))THEN MIN([Calculation_1648598996464066587])ELSEIF SUM([Value])=WINDOW_MAX(SUM([Value]))THEN MAX([Calculation_1648598996464066587])END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Months]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[date (M/Y)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='Calculation_1648598996464066587' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [Calculation_1648598996464066587])*100 + DATEPART(&apos;month&apos;, [Calculation_1648598996464066587]))' />
            </column>
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date (M/Y)]' derivation='None' name='[none:date (M/Y):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1648598996464611356]' derivation='User' name='[usr:Calculation_1648598996464611356:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1krbxfq1vhq84h1ga9em30n7wsgp].[none:Year:ok]' />
              <lod column='[federated.1krbxfq1vhq84h1ga9em30n7wsgp].[none:Year:qk]' />
              <text column='[federated.1krbxfq1vhq84h1ga9em30n7wsgp].[usr:Calculation_1648598996464611356:ok]' />
            </encodings>
            <reference-line axis-column='[federated.1krbxfq1vhq84h1ga9em30n7wsgp].[sum:Value:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1krbxfq1vhq84h1ga9em30n7wsgp].[sum:Value:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1krbxfq1vhq84h1ga9em30n7wsgp].[sum:Value:qk]</rows>
        <cols>[federated.1krbxfq1vhq84h1ga9em30n7wsgp].[none:date (M/Y):ok]</cols>
      </table>
      <simple-id uuid='{7EE9C708-5DC7-48CB-90F6-8CFE12A9947B}' />
    </worksheet>
    <worksheet name='oil'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='22'>  Oil    </run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontsize='12'>Ananya Billawaria</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_long_oil)' name='federated.01d103x1jyosq31doin3i0kqsebp' />
          </datasources>
          <datasource-dependencies datasource='federated.01d103x1jyosq31doin3i0kqsebp'>
            <column caption='date' datatype='date' name='[Calculation_1648598996448391184]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy/MMMM&quot;, STR([Year])+ &quot;/&quot; +STR(([Months])) ))' />
            </column>
            <column caption='minmax' datatype='date' datatype-customized='true' name='[Calculation_1648598996449706001]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='IF SUM([Value])= WINDOW_MIN(SUM([Value]))THEN MIN([Calculation_1648598996448391184])ELSEIF SUM([Value])=WINDOW_MAX(SUM([Value]))THEN MAX([Calculation_1648598996448391184])END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Months]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[date (M/Y)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='Calculation_1648598996448391184' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [Calculation_1648598996448391184])*100 + DATEPART(&apos;month&apos;, [Calculation_1648598996448391184]))' />
            </column>
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date (M/Y)]' derivation='None' name='[none:date (M/Y):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1648598996449706001]' derivation='User' name='[usr:Calculation_1648598996449706001:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.01d103x1jyosq31doin3i0kqsebp].[none:Year:ok]' />
              <lod column='[federated.01d103x1jyosq31doin3i0kqsebp].[none:Year:qk]' />
              <text column='[federated.01d103x1jyosq31doin3i0kqsebp].[usr:Calculation_1648598996449706001:ok]' />
            </encodings>
            <reference-line axis-column='[federated.01d103x1jyosq31doin3i0kqsebp].[sum:Value:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.01d103x1jyosq31doin3i0kqsebp].[sum:Value:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='229' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01d103x1jyosq31doin3i0kqsebp].[sum:Value:qk]</rows>
        <cols>[federated.01d103x1jyosq31doin3i0kqsebp].[none:date (M/Y):ok]</cols>
      </table>
      <simple-id uuid='{B730A1F7-38E0-4D07-B66C-97CB685F2995}' />
    </worksheet>
    <worksheet name='power'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='22'>               Power    </run>
            <run fontalignment='1'>Æ                       &#10;</run>
            <run fontalignment='1' fontsize='12'> Ananya Billawaria</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_long_Po)' name='federated.0aghkan1klh4ph1gyrkbi1oxqkc6' />
          </datasources>
          <datasource-dependencies datasource='federated.0aghkan1klh4ph1gyrkbi1oxqkc6'>
            <column caption='Date' datatype='date' datatype-customized='true' name='[Calculation_1648598996351471629]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy/MMMM&quot;, STR([Year])+ &quot;/&quot; +STR(([Months])) ))' />
            </column>
            <column caption='minmax' datatype='date' name='[Calculation_1648598996356309007]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='IF SUM([Value])=WINDOW_MIN(SUM([Value]))THEN MIN([Calculation_1648598996351471629])ELSEIF SUM([Value])=WINDOW_MAX(SUM([Value]))THEN MAX([Calculation_1648598996351471629])END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Date (M/Y)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='Calculation_1648598996351471629' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [Calculation_1648598996351471629])*100 + DATEPART(&apos;month&apos;, [Calculation_1648598996351471629]))' />
            </column>
            <column datatype='string' name='[Months]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Date (M/Y)]' derivation='None' name='[none:Date (M/Y):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1648598996356309007]' derivation='User' name='[usr:Calculation_1648598996356309007:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aghkan1klh4ph1gyrkbi1oxqkc6].[Exclusions (Date (M/Y),Year)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Date (M/Y):ok]' />
                <groupfilter function='level-members' level='[none:Year:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Date (M/Y):ok]' member='202403' />
                <groupfilter function='member' level='[none:Year:nk]' member='&quot;2024&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0aghkan1klh4ph1gyrkbi1oxqkc6].[none:Date (M/Y):ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Date (M/Y):ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Date (M/Y):ok]' member='202402' />
                <groupfilter function='member' level='[none:Date (M/Y):ok]' member='202404' />
                <groupfilter function='member' level='[none:Date (M/Y):ok]' member='202405' />
                <groupfilter function='member' level='[none:Date (M/Y):ok]' member='202406' />
                <groupfilter function='member' level='[none:Date (M/Y):ok]' member='202407' />
                <groupfilter function='member' level='[none:Date (M/Y):ok]' member='202408' />
                <groupfilter function='member' level='[none:Date (M/Y):ok]' member='202409' />
                <groupfilter function='member' level='[none:Date (M/Y):ok]' member='202410' />
                <groupfilter function='member' level='[none:Date (M/Y):ok]' member='202411' />
                <groupfilter function='member' level='[none:Date (M/Y):ok]' member='202412' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0aghkan1klh4ph1gyrkbi1oxqkc6].[Exclusions (Date (M/Y),Year)]</column>
            <column>[federated.0aghkan1klh4ph1gyrkbi1oxqkc6].[none:Date (M/Y):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0aghkan1klh4ph1gyrkbi1oxqkc6].[none:Year:nk]' />
              <text column='[federated.0aghkan1klh4ph1gyrkbi1oxqkc6].[usr:Calculation_1648598996356309007:qk]' />
              <lod column='[federated.0aghkan1klh4ph1gyrkbi1oxqkc6].[none:Year:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0aghkan1klh4ph1gyrkbi1oxqkc6].[sum:Value:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0aghkan1klh4ph1gyrkbi1oxqkc6].[sum:Value:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aghkan1klh4ph1gyrkbi1oxqkc6].[sum:Value:qk]</rows>
        <cols>[federated.0aghkan1klh4ph1gyrkbi1oxqkc6].[none:Date (M/Y):ok]</cols>
      </table>
      <simple-id uuid='{FB3F197E-8AF2-42EE-B26A-65C8BB8CB856}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='5' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{55CE1248-BB0C-4F48-B8C6-976D12611532}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='297'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='132'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1av105x13bso0l1483flz0vgg3d8].[none:Year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1av105x13bso0l1483flz0vgg3d8].[none:Calculation_685954572381306881:nk]' type='color' />
            <card param='[federated.1av105x13bso0l1483flz0vgg3d8].[none:Year:ok]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{65B6C9F5-4E2A-49CC-AC57-2FF3AC07ED69}' />
    </window>
    <window class='worksheet' maximized='true' name='Pharma'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0sc1ceo1ct0dkq171ubqc0l2gme2].[none:Year:ok]' type='filter' />
            <card pane-specification-id='3' param='[federated.0sc1ceo1ct0dkq171ubqc0l2gme2].[none:Year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight field='[federated.0sc1ceo1ct0dkq171ubqc0l2gme2].[none:Year:ok]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{FB1E57E6-54B7-4A86-9EFE-904236DE3FE5}' />
    </window>
    <window class='worksheet' name='power'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0aghkan1klh4ph1gyrkbi1oxqkc6].[none:Year:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
      </viewpoint>
      <simple-id uuid='{0D2B6F01-63AB-4D73-9C8E-57A67D20E7D2}' />
    </window>
    <window class='worksheet' name='oil'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='84'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.01d103x1jyosq31doin3i0kqsebp].[none:Year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{91695931-366A-44F8-805E-46E703C73AF1}' />
    </window>
    <window class='worksheet' name='cement'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0uc9xdk1p8a2eu1go1k2t0c14b32].[none:Year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{67380655-C756-46FB-93B7-E4DCDEF647A4}' />
    </window>
    <window class='worksheet' name='Fertilizer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.05fm1pe1qt4mjp19ltvz4109j2ft].[none:Year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BCEE5699-B6BF-49E2-AF01-C999D2585FFE}' />
    </window>
    <window class='worksheet' name='IT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1awnv4417j85c411oxkos0d12eye].[none:Year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D77B7225-73F4-4D0D-BE61-491B19B86455}' />
    </window>
    <window class='worksheet' name='media'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0wggnjo0vx7xzw1au99r813fotsn].[none:Year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{376537C7-96DA-450D-AFB0-81CA5095A84E}' />
    </window>
    <window class='worksheet' name='metal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1krbxfq1vhq84h1ga9em30n7wsgp].[none:Year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B3CB8F28-7A73-4A48-8305-12C166CEE4EB}' />
    </window>
    <window class='worksheet' name='Telecom'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1yal7w41wlwzlj1h345rj122ldpl].[none:Year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BE4C8E88-A7EA-469B-99F5-059F3DD00E5F}' />
    </window>
    <window class='worksheet' name='auto'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.186ernu0lypxmw1c2s0dv1qrtv3y].[none:Year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A1F70BF1-C661-45BE-82E7-5A3CDC1468AE}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{BF4638F3-AFA5-4438-AADC-6C6AB6287E44}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Fertilizer' width='192'>
      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
      JNtkeO2f/x+UhimOmWLIYwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='IT' width='192'>
      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
      KkjPE0II/n+DT62I/15pBwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Pharma' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Telecom' width='192'>
      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
      bHXmeh2H/x/LpUxwSJK9vgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='auto' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='cement' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='media' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='metal' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='oil' width='192'>
      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
      zf8PEpYEk5uX02UAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='power' width='192'>
      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
      4cxQ53wAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
